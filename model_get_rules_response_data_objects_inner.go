/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// GetRulesResponseDataObjectsInner - struct for GetRulesResponseDataObjectsInner
type GetRulesResponseDataObjectsInner struct {
	GetRulesResponseDataObjectsInnerOneOf *GetRulesResponseDataObjectsInnerOneOf
	GetRulesResponseDataObjectsInnerOneOf1 *GetRulesResponseDataObjectsInnerOneOf1
	GetRulesResponseDataObjectsInnerOneOf2 *GetRulesResponseDataObjectsInnerOneOf2
	GetRulesResponseDataObjectsInnerOneOf3 *GetRulesResponseDataObjectsInnerOneOf3
	GetRulesResponseDataObjectsInnerOneOf4 *GetRulesResponseDataObjectsInnerOneOf4
	GetRulesResponseDataObjectsInnerOneOf5 *GetRulesResponseDataObjectsInnerOneOf5
	GetRulesResponseDataObjectsInnerOneOf6 *GetRulesResponseDataObjectsInnerOneOf6
}

// GetRulesResponseDataObjectsInnerOneOfAsGetRulesResponseDataObjectsInner is a convenience function that returns GetRulesResponseDataObjectsInnerOneOf wrapped in GetRulesResponseDataObjectsInner
func GetRulesResponseDataObjectsInnerOneOfAsGetRulesResponseDataObjectsInner(v *GetRulesResponseDataObjectsInnerOneOf) GetRulesResponseDataObjectsInner {
	return GetRulesResponseDataObjectsInner{
		GetRulesResponseDataObjectsInnerOneOf: v,
	}
}

// GetRulesResponseDataObjectsInnerOneOf1AsGetRulesResponseDataObjectsInner is a convenience function that returns GetRulesResponseDataObjectsInnerOneOf1 wrapped in GetRulesResponseDataObjectsInner
func GetRulesResponseDataObjectsInnerOneOf1AsGetRulesResponseDataObjectsInner(v *GetRulesResponseDataObjectsInnerOneOf1) GetRulesResponseDataObjectsInner {
	return GetRulesResponseDataObjectsInner{
		GetRulesResponseDataObjectsInnerOneOf1: v,
	}
}

// GetRulesResponseDataObjectsInnerOneOf2AsGetRulesResponseDataObjectsInner is a convenience function that returns GetRulesResponseDataObjectsInnerOneOf2 wrapped in GetRulesResponseDataObjectsInner
func GetRulesResponseDataObjectsInnerOneOf2AsGetRulesResponseDataObjectsInner(v *GetRulesResponseDataObjectsInnerOneOf2) GetRulesResponseDataObjectsInner {
	return GetRulesResponseDataObjectsInner{
		GetRulesResponseDataObjectsInnerOneOf2: v,
	}
}

// GetRulesResponseDataObjectsInnerOneOf3AsGetRulesResponseDataObjectsInner is a convenience function that returns GetRulesResponseDataObjectsInnerOneOf3 wrapped in GetRulesResponseDataObjectsInner
func GetRulesResponseDataObjectsInnerOneOf3AsGetRulesResponseDataObjectsInner(v *GetRulesResponseDataObjectsInnerOneOf3) GetRulesResponseDataObjectsInner {
	return GetRulesResponseDataObjectsInner{
		GetRulesResponseDataObjectsInnerOneOf3: v,
	}
}

// GetRulesResponseDataObjectsInnerOneOf4AsGetRulesResponseDataObjectsInner is a convenience function that returns GetRulesResponseDataObjectsInnerOneOf4 wrapped in GetRulesResponseDataObjectsInner
func GetRulesResponseDataObjectsInnerOneOf4AsGetRulesResponseDataObjectsInner(v *GetRulesResponseDataObjectsInnerOneOf4) GetRulesResponseDataObjectsInner {
	return GetRulesResponseDataObjectsInner{
		GetRulesResponseDataObjectsInnerOneOf4: v,
	}
}

// GetRulesResponseDataObjectsInnerOneOf5AsGetRulesResponseDataObjectsInner is a convenience function that returns GetRulesResponseDataObjectsInnerOneOf5 wrapped in GetRulesResponseDataObjectsInner
func GetRulesResponseDataObjectsInnerOneOf5AsGetRulesResponseDataObjectsInner(v *GetRulesResponseDataObjectsInnerOneOf5) GetRulesResponseDataObjectsInner {
	return GetRulesResponseDataObjectsInner{
		GetRulesResponseDataObjectsInnerOneOf5: v,
	}
}

// GetRulesResponseDataObjectsInnerOneOf6AsGetRulesResponseDataObjectsInner is a convenience function that returns GetRulesResponseDataObjectsInnerOneOf6 wrapped in GetRulesResponseDataObjectsInner
func GetRulesResponseDataObjectsInnerOneOf6AsGetRulesResponseDataObjectsInner(v *GetRulesResponseDataObjectsInnerOneOf6) GetRulesResponseDataObjectsInner {
	return GetRulesResponseDataObjectsInner{
		GetRulesResponseDataObjectsInnerOneOf6: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetRulesResponseDataObjectsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetRulesResponseDataObjectsInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.GetRulesResponseDataObjectsInnerOneOf)
	if err == nil {
		jsonGetRulesResponseDataObjectsInnerOneOf, _ := json.Marshal(dst.GetRulesResponseDataObjectsInnerOneOf)
		if string(jsonGetRulesResponseDataObjectsInnerOneOf) == "{}" { // empty struct
			dst.GetRulesResponseDataObjectsInnerOneOf = nil
		} else {
			if err = validator.Validate(dst.GetRulesResponseDataObjectsInnerOneOf); err != nil {
				dst.GetRulesResponseDataObjectsInnerOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetRulesResponseDataObjectsInnerOneOf = nil
	}

	// try to unmarshal data into GetRulesResponseDataObjectsInnerOneOf1
	err = newStrictDecoder(data).Decode(&dst.GetRulesResponseDataObjectsInnerOneOf1)
	if err == nil {
		jsonGetRulesResponseDataObjectsInnerOneOf1, _ := json.Marshal(dst.GetRulesResponseDataObjectsInnerOneOf1)
		if string(jsonGetRulesResponseDataObjectsInnerOneOf1) == "{}" { // empty struct
			dst.GetRulesResponseDataObjectsInnerOneOf1 = nil
		} else {
			if err = validator.Validate(dst.GetRulesResponseDataObjectsInnerOneOf1); err != nil {
				dst.GetRulesResponseDataObjectsInnerOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetRulesResponseDataObjectsInnerOneOf1 = nil
	}

	// try to unmarshal data into GetRulesResponseDataObjectsInnerOneOf2
	err = newStrictDecoder(data).Decode(&dst.GetRulesResponseDataObjectsInnerOneOf2)
	if err == nil {
		jsonGetRulesResponseDataObjectsInnerOneOf2, _ := json.Marshal(dst.GetRulesResponseDataObjectsInnerOneOf2)
		if string(jsonGetRulesResponseDataObjectsInnerOneOf2) == "{}" { // empty struct
			dst.GetRulesResponseDataObjectsInnerOneOf2 = nil
		} else {
			if err = validator.Validate(dst.GetRulesResponseDataObjectsInnerOneOf2); err != nil {
				dst.GetRulesResponseDataObjectsInnerOneOf2 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetRulesResponseDataObjectsInnerOneOf2 = nil
	}

	// try to unmarshal data into GetRulesResponseDataObjectsInnerOneOf3
	err = newStrictDecoder(data).Decode(&dst.GetRulesResponseDataObjectsInnerOneOf3)
	if err == nil {
		jsonGetRulesResponseDataObjectsInnerOneOf3, _ := json.Marshal(dst.GetRulesResponseDataObjectsInnerOneOf3)
		if string(jsonGetRulesResponseDataObjectsInnerOneOf3) == "{}" { // empty struct
			dst.GetRulesResponseDataObjectsInnerOneOf3 = nil
		} else {
			if err = validator.Validate(dst.GetRulesResponseDataObjectsInnerOneOf3); err != nil {
				dst.GetRulesResponseDataObjectsInnerOneOf3 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetRulesResponseDataObjectsInnerOneOf3 = nil
	}

	// try to unmarshal data into GetRulesResponseDataObjectsInnerOneOf4
	err = newStrictDecoder(data).Decode(&dst.GetRulesResponseDataObjectsInnerOneOf4)
	if err == nil {
		jsonGetRulesResponseDataObjectsInnerOneOf4, _ := json.Marshal(dst.GetRulesResponseDataObjectsInnerOneOf4)
		if string(jsonGetRulesResponseDataObjectsInnerOneOf4) == "{}" { // empty struct
			dst.GetRulesResponseDataObjectsInnerOneOf4 = nil
		} else {
			if err = validator.Validate(dst.GetRulesResponseDataObjectsInnerOneOf4); err != nil {
				dst.GetRulesResponseDataObjectsInnerOneOf4 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetRulesResponseDataObjectsInnerOneOf4 = nil
	}

	// try to unmarshal data into GetRulesResponseDataObjectsInnerOneOf5
	err = newStrictDecoder(data).Decode(&dst.GetRulesResponseDataObjectsInnerOneOf5)
	if err == nil {
		jsonGetRulesResponseDataObjectsInnerOneOf5, _ := json.Marshal(dst.GetRulesResponseDataObjectsInnerOneOf5)
		if string(jsonGetRulesResponseDataObjectsInnerOneOf5) == "{}" { // empty struct
			dst.GetRulesResponseDataObjectsInnerOneOf5 = nil
		} else {
			if err = validator.Validate(dst.GetRulesResponseDataObjectsInnerOneOf5); err != nil {
				dst.GetRulesResponseDataObjectsInnerOneOf5 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetRulesResponseDataObjectsInnerOneOf5 = nil
	}

	// try to unmarshal data into GetRulesResponseDataObjectsInnerOneOf6
	err = newStrictDecoder(data).Decode(&dst.GetRulesResponseDataObjectsInnerOneOf6)
	if err == nil {
		jsonGetRulesResponseDataObjectsInnerOneOf6, _ := json.Marshal(dst.GetRulesResponseDataObjectsInnerOneOf6)
		if string(jsonGetRulesResponseDataObjectsInnerOneOf6) == "{}" { // empty struct
			dst.GetRulesResponseDataObjectsInnerOneOf6 = nil
		} else {
			if err = validator.Validate(dst.GetRulesResponseDataObjectsInnerOneOf6); err != nil {
				dst.GetRulesResponseDataObjectsInnerOneOf6 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetRulesResponseDataObjectsInnerOneOf6 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetRulesResponseDataObjectsInnerOneOf = nil
		dst.GetRulesResponseDataObjectsInnerOneOf1 = nil
		dst.GetRulesResponseDataObjectsInnerOneOf2 = nil
		dst.GetRulesResponseDataObjectsInnerOneOf3 = nil
		dst.GetRulesResponseDataObjectsInnerOneOf4 = nil
		dst.GetRulesResponseDataObjectsInnerOneOf5 = nil
		dst.GetRulesResponseDataObjectsInnerOneOf6 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetRulesResponseDataObjectsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetRulesResponseDataObjectsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetRulesResponseDataObjectsInner) MarshalJSON() ([]byte, error) {
	if src.GetRulesResponseDataObjectsInnerOneOf != nil {
		return json.Marshal(&src.GetRulesResponseDataObjectsInnerOneOf)
	}

	if src.GetRulesResponseDataObjectsInnerOneOf1 != nil {
		return json.Marshal(&src.GetRulesResponseDataObjectsInnerOneOf1)
	}

	if src.GetRulesResponseDataObjectsInnerOneOf2 != nil {
		return json.Marshal(&src.GetRulesResponseDataObjectsInnerOneOf2)
	}

	if src.GetRulesResponseDataObjectsInnerOneOf3 != nil {
		return json.Marshal(&src.GetRulesResponseDataObjectsInnerOneOf3)
	}

	if src.GetRulesResponseDataObjectsInnerOneOf4 != nil {
		return json.Marshal(&src.GetRulesResponseDataObjectsInnerOneOf4)
	}

	if src.GetRulesResponseDataObjectsInnerOneOf5 != nil {
		return json.Marshal(&src.GetRulesResponseDataObjectsInnerOneOf5)
	}

	if src.GetRulesResponseDataObjectsInnerOneOf6 != nil {
		return json.Marshal(&src.GetRulesResponseDataObjectsInnerOneOf6)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetRulesResponseDataObjectsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.GetRulesResponseDataObjectsInnerOneOf != nil {
		return obj.GetRulesResponseDataObjectsInnerOneOf
	}

	if obj.GetRulesResponseDataObjectsInnerOneOf1 != nil {
		return obj.GetRulesResponseDataObjectsInnerOneOf1
	}

	if obj.GetRulesResponseDataObjectsInnerOneOf2 != nil {
		return obj.GetRulesResponseDataObjectsInnerOneOf2
	}

	if obj.GetRulesResponseDataObjectsInnerOneOf3 != nil {
		return obj.GetRulesResponseDataObjectsInnerOneOf3
	}

	if obj.GetRulesResponseDataObjectsInnerOneOf4 != nil {
		return obj.GetRulesResponseDataObjectsInnerOneOf4
	}

	if obj.GetRulesResponseDataObjectsInnerOneOf5 != nil {
		return obj.GetRulesResponseDataObjectsInnerOneOf5
	}

	if obj.GetRulesResponseDataObjectsInnerOneOf6 != nil {
		return obj.GetRulesResponseDataObjectsInnerOneOf6
	}

	// all schemas are nil
	return nil
}

type NullableGetRulesResponseDataObjectsInner struct {
	value *GetRulesResponseDataObjectsInner
	isSet bool
}

func (v NullableGetRulesResponseDataObjectsInner) Get() *GetRulesResponseDataObjectsInner {
	return v.value
}

func (v *NullableGetRulesResponseDataObjectsInner) Set(val *GetRulesResponseDataObjectsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRulesResponseDataObjectsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRulesResponseDataObjectsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRulesResponseDataObjectsInner(val *GetRulesResponseDataObjectsInner) *NullableGetRulesResponseDataObjectsInner {
	return &NullableGetRulesResponseDataObjectsInner{value: val, isSet: true}
}

func (v NullableGetRulesResponseDataObjectsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRulesResponseDataObjectsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



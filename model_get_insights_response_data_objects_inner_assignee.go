/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// GetInsightsResponseDataObjectsInnerAssignee - The user or team this Insight is assigned to.
type GetInsightsResponseDataObjectsInnerAssignee struct {
	GetEntityNotesResponseDataInnerAuthor *GetEntityNotesResponseDataInnerAuthor
	GetInsightsResponseDataObjectsInnerAssigneeOneOf *GetInsightsResponseDataObjectsInnerAssigneeOneOf
	GetInsightsResponseDataObjectsInnerAssigneeOneOf1 *GetInsightsResponseDataObjectsInnerAssigneeOneOf1
}

// GetEntityNotesResponseDataInnerAuthorAsGetInsightsResponseDataObjectsInnerAssignee is a convenience function that returns GetEntityNotesResponseDataInnerAuthor wrapped in GetInsightsResponseDataObjectsInnerAssignee
func GetEntityNotesResponseDataInnerAuthorAsGetInsightsResponseDataObjectsInnerAssignee(v *GetEntityNotesResponseDataInnerAuthor) GetInsightsResponseDataObjectsInnerAssignee {
	return GetInsightsResponseDataObjectsInnerAssignee{
		GetEntityNotesResponseDataInnerAuthor: v,
	}
}

// GetInsightsResponseDataObjectsInnerAssigneeOneOfAsGetInsightsResponseDataObjectsInnerAssignee is a convenience function that returns GetInsightsResponseDataObjectsInnerAssigneeOneOf wrapped in GetInsightsResponseDataObjectsInnerAssignee
func GetInsightsResponseDataObjectsInnerAssigneeOneOfAsGetInsightsResponseDataObjectsInnerAssignee(v *GetInsightsResponseDataObjectsInnerAssigneeOneOf) GetInsightsResponseDataObjectsInnerAssignee {
	return GetInsightsResponseDataObjectsInnerAssignee{
		GetInsightsResponseDataObjectsInnerAssigneeOneOf: v,
	}
}

// GetInsightsResponseDataObjectsInnerAssigneeOneOf1AsGetInsightsResponseDataObjectsInnerAssignee is a convenience function that returns GetInsightsResponseDataObjectsInnerAssigneeOneOf1 wrapped in GetInsightsResponseDataObjectsInnerAssignee
func GetInsightsResponseDataObjectsInnerAssigneeOneOf1AsGetInsightsResponseDataObjectsInnerAssignee(v *GetInsightsResponseDataObjectsInnerAssigneeOneOf1) GetInsightsResponseDataObjectsInnerAssignee {
	return GetInsightsResponseDataObjectsInnerAssignee{
		GetInsightsResponseDataObjectsInnerAssigneeOneOf1: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetInsightsResponseDataObjectsInnerAssignee) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetEntityNotesResponseDataInnerAuthor
	err = newStrictDecoder(data).Decode(&dst.GetEntityNotesResponseDataInnerAuthor)
	if err == nil {
		jsonGetEntityNotesResponseDataInnerAuthor, _ := json.Marshal(dst.GetEntityNotesResponseDataInnerAuthor)
		if string(jsonGetEntityNotesResponseDataInnerAuthor) == "{}" { // empty struct
			dst.GetEntityNotesResponseDataInnerAuthor = nil
		} else {
			if err = validator.Validate(dst.GetEntityNotesResponseDataInnerAuthor); err != nil {
				dst.GetEntityNotesResponseDataInnerAuthor = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetEntityNotesResponseDataInnerAuthor = nil
	}

	// try to unmarshal data into GetInsightsResponseDataObjectsInnerAssigneeOneOf
	err = newStrictDecoder(data).Decode(&dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf)
	if err == nil {
		jsonGetInsightsResponseDataObjectsInnerAssigneeOneOf, _ := json.Marshal(dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf)
		if string(jsonGetInsightsResponseDataObjectsInnerAssigneeOneOf) == "{}" { // empty struct
			dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf = nil
		} else {
			if err = validator.Validate(dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf); err != nil {
				dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf = nil
	}

	// try to unmarshal data into GetInsightsResponseDataObjectsInnerAssigneeOneOf1
	err = newStrictDecoder(data).Decode(&dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf1)
	if err == nil {
		jsonGetInsightsResponseDataObjectsInnerAssigneeOneOf1, _ := json.Marshal(dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf1)
		if string(jsonGetInsightsResponseDataObjectsInnerAssigneeOneOf1) == "{}" { // empty struct
			dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf1 = nil
		} else {
			if err = validator.Validate(dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf1); err != nil {
				dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetEntityNotesResponseDataInnerAuthor = nil
		dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf = nil
		dst.GetInsightsResponseDataObjectsInnerAssigneeOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetInsightsResponseDataObjectsInnerAssignee)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetInsightsResponseDataObjectsInnerAssignee)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetInsightsResponseDataObjectsInnerAssignee) MarshalJSON() ([]byte, error) {
	if src.GetEntityNotesResponseDataInnerAuthor != nil {
		return json.Marshal(&src.GetEntityNotesResponseDataInnerAuthor)
	}

	if src.GetInsightsResponseDataObjectsInnerAssigneeOneOf != nil {
		return json.Marshal(&src.GetInsightsResponseDataObjectsInnerAssigneeOneOf)
	}

	if src.GetInsightsResponseDataObjectsInnerAssigneeOneOf1 != nil {
		return json.Marshal(&src.GetInsightsResponseDataObjectsInnerAssigneeOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetInsightsResponseDataObjectsInnerAssignee) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.GetEntityNotesResponseDataInnerAuthor != nil {
		return obj.GetEntityNotesResponseDataInnerAuthor
	}

	if obj.GetInsightsResponseDataObjectsInnerAssigneeOneOf != nil {
		return obj.GetInsightsResponseDataObjectsInnerAssigneeOneOf
	}

	if obj.GetInsightsResponseDataObjectsInnerAssigneeOneOf1 != nil {
		return obj.GetInsightsResponseDataObjectsInnerAssigneeOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableGetInsightsResponseDataObjectsInnerAssignee struct {
	value *GetInsightsResponseDataObjectsInnerAssignee
	isSet bool
}

func (v NullableGetInsightsResponseDataObjectsInnerAssignee) Get() *GetInsightsResponseDataObjectsInnerAssignee {
	return v.value
}

func (v *NullableGetInsightsResponseDataObjectsInnerAssignee) Set(val *GetInsightsResponseDataObjectsInnerAssignee) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInsightsResponseDataObjectsInnerAssignee) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInsightsResponseDataObjectsInnerAssignee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInsightsResponseDataObjectsInnerAssignee(val *GetInsightsResponseDataObjectsInnerAssignee) *NullableGetInsightsResponseDataObjectsInnerAssignee {
	return &NullableGetInsightsResponseDataObjectsInnerAssignee{value: val, isSet: true}
}

func (v NullableGetInsightsResponseDataObjectsInnerAssignee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInsightsResponseDataObjectsInnerAssignee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



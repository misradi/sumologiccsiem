/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologiccsiem

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateInventoryRequestBodyFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInventoryRequestBodyFields{}

// CreateInventoryRequestBodyFields struct for CreateInventoryRequestBodyFields
type CreateInventoryRequestBodyFields struct {
	Name string `json:"name"`
	ConfigurationType string `json:"configurationType"`
	Description *string `json:"description,omitempty"`
	InventoryType *string `json:"inventoryType,omitempty"`
	InventorySource string `json:"inventorySource"`
	Group *string `json:"group,omitempty"`
	InventoryKey *string `json:"inventoryKey,omitempty"`
	InventoryValue *string `json:"inventoryValue,omitempty"`
	TagSchema *string `json:"tagSchema,omitempty"`
	DynamicTags *bool `json:"dynamicTags,omitempty"`
	Criticality *string `json:"criticality,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Suppressed *bool `json:"suppressed,omitempty"`
}

type _CreateInventoryRequestBodyFields CreateInventoryRequestBodyFields

// NewCreateInventoryRequestBodyFields instantiates a new CreateInventoryRequestBodyFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInventoryRequestBodyFields(name string, configurationType string, inventorySource string) *CreateInventoryRequestBodyFields {
	this := CreateInventoryRequestBodyFields{}
	this.Name = name
	this.ConfigurationType = configurationType
	this.InventorySource = inventorySource
	return &this
}

// NewCreateInventoryRequestBodyFieldsWithDefaults instantiates a new CreateInventoryRequestBodyFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInventoryRequestBodyFieldsWithDefaults() *CreateInventoryRequestBodyFields {
	this := CreateInventoryRequestBodyFields{}
	return &this
}

// GetName returns the Name field value
func (o *CreateInventoryRequestBodyFields) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateInventoryRequestBodyFields) SetName(v string) {
	o.Name = v
}

// GetConfigurationType returns the ConfigurationType field value
func (o *CreateInventoryRequestBodyFields) GetConfigurationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigurationType
}

// GetConfigurationTypeOk returns a tuple with the ConfigurationType field value
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetConfigurationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfigurationType, true
}

// SetConfigurationType sets field value
func (o *CreateInventoryRequestBodyFields) SetConfigurationType(v string) {
	o.ConfigurationType = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateInventoryRequestBodyFields) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateInventoryRequestBodyFields) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateInventoryRequestBodyFields) SetDescription(v string) {
	o.Description = &v
}

// GetInventoryType returns the InventoryType field value if set, zero value otherwise.
func (o *CreateInventoryRequestBodyFields) GetInventoryType() string {
	if o == nil || IsNil(o.InventoryType) {
		var ret string
		return ret
	}
	return *o.InventoryType
}

// GetInventoryTypeOk returns a tuple with the InventoryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetInventoryTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InventoryType) {
		return nil, false
	}
	return o.InventoryType, true
}

// HasInventoryType returns a boolean if a field has been set.
func (o *CreateInventoryRequestBodyFields) HasInventoryType() bool {
	if o != nil && !IsNil(o.InventoryType) {
		return true
	}

	return false
}

// SetInventoryType gets a reference to the given string and assigns it to the InventoryType field.
func (o *CreateInventoryRequestBodyFields) SetInventoryType(v string) {
	o.InventoryType = &v
}

// GetInventorySource returns the InventorySource field value
func (o *CreateInventoryRequestBodyFields) GetInventorySource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InventorySource
}

// GetInventorySourceOk returns a tuple with the InventorySource field value
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetInventorySourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InventorySource, true
}

// SetInventorySource sets field value
func (o *CreateInventoryRequestBodyFields) SetInventorySource(v string) {
	o.InventorySource = v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *CreateInventoryRequestBodyFields) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *CreateInventoryRequestBodyFields) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *CreateInventoryRequestBodyFields) SetGroup(v string) {
	o.Group = &v
}

// GetInventoryKey returns the InventoryKey field value if set, zero value otherwise.
func (o *CreateInventoryRequestBodyFields) GetInventoryKey() string {
	if o == nil || IsNil(o.InventoryKey) {
		var ret string
		return ret
	}
	return *o.InventoryKey
}

// GetInventoryKeyOk returns a tuple with the InventoryKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetInventoryKeyOk() (*string, bool) {
	if o == nil || IsNil(o.InventoryKey) {
		return nil, false
	}
	return o.InventoryKey, true
}

// HasInventoryKey returns a boolean if a field has been set.
func (o *CreateInventoryRequestBodyFields) HasInventoryKey() bool {
	if o != nil && !IsNil(o.InventoryKey) {
		return true
	}

	return false
}

// SetInventoryKey gets a reference to the given string and assigns it to the InventoryKey field.
func (o *CreateInventoryRequestBodyFields) SetInventoryKey(v string) {
	o.InventoryKey = &v
}

// GetInventoryValue returns the InventoryValue field value if set, zero value otherwise.
func (o *CreateInventoryRequestBodyFields) GetInventoryValue() string {
	if o == nil || IsNil(o.InventoryValue) {
		var ret string
		return ret
	}
	return *o.InventoryValue
}

// GetInventoryValueOk returns a tuple with the InventoryValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetInventoryValueOk() (*string, bool) {
	if o == nil || IsNil(o.InventoryValue) {
		return nil, false
	}
	return o.InventoryValue, true
}

// HasInventoryValue returns a boolean if a field has been set.
func (o *CreateInventoryRequestBodyFields) HasInventoryValue() bool {
	if o != nil && !IsNil(o.InventoryValue) {
		return true
	}

	return false
}

// SetInventoryValue gets a reference to the given string and assigns it to the InventoryValue field.
func (o *CreateInventoryRequestBodyFields) SetInventoryValue(v string) {
	o.InventoryValue = &v
}

// GetTagSchema returns the TagSchema field value if set, zero value otherwise.
func (o *CreateInventoryRequestBodyFields) GetTagSchema() string {
	if o == nil || IsNil(o.TagSchema) {
		var ret string
		return ret
	}
	return *o.TagSchema
}

// GetTagSchemaOk returns a tuple with the TagSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetTagSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.TagSchema) {
		return nil, false
	}
	return o.TagSchema, true
}

// HasTagSchema returns a boolean if a field has been set.
func (o *CreateInventoryRequestBodyFields) HasTagSchema() bool {
	if o != nil && !IsNil(o.TagSchema) {
		return true
	}

	return false
}

// SetTagSchema gets a reference to the given string and assigns it to the TagSchema field.
func (o *CreateInventoryRequestBodyFields) SetTagSchema(v string) {
	o.TagSchema = &v
}

// GetDynamicTags returns the DynamicTags field value if set, zero value otherwise.
func (o *CreateInventoryRequestBodyFields) GetDynamicTags() bool {
	if o == nil || IsNil(o.DynamicTags) {
		var ret bool
		return ret
	}
	return *o.DynamicTags
}

// GetDynamicTagsOk returns a tuple with the DynamicTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetDynamicTagsOk() (*bool, bool) {
	if o == nil || IsNil(o.DynamicTags) {
		return nil, false
	}
	return o.DynamicTags, true
}

// HasDynamicTags returns a boolean if a field has been set.
func (o *CreateInventoryRequestBodyFields) HasDynamicTags() bool {
	if o != nil && !IsNil(o.DynamicTags) {
		return true
	}

	return false
}

// SetDynamicTags gets a reference to the given bool and assigns it to the DynamicTags field.
func (o *CreateInventoryRequestBodyFields) SetDynamicTags(v bool) {
	o.DynamicTags = &v
}

// GetCriticality returns the Criticality field value if set, zero value otherwise.
func (o *CreateInventoryRequestBodyFields) GetCriticality() string {
	if o == nil || IsNil(o.Criticality) {
		var ret string
		return ret
	}
	return *o.Criticality
}

// GetCriticalityOk returns a tuple with the Criticality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetCriticalityOk() (*string, bool) {
	if o == nil || IsNil(o.Criticality) {
		return nil, false
	}
	return o.Criticality, true
}

// HasCriticality returns a boolean if a field has been set.
func (o *CreateInventoryRequestBodyFields) HasCriticality() bool {
	if o != nil && !IsNil(o.Criticality) {
		return true
	}

	return false
}

// SetCriticality gets a reference to the given string and assigns it to the Criticality field.
func (o *CreateInventoryRequestBodyFields) SetCriticality(v string) {
	o.Criticality = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateInventoryRequestBodyFields) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateInventoryRequestBodyFields) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CreateInventoryRequestBodyFields) SetTags(v []string) {
	o.Tags = v
}

// GetSuppressed returns the Suppressed field value if set, zero value otherwise.
func (o *CreateInventoryRequestBodyFields) GetSuppressed() bool {
	if o == nil || IsNil(o.Suppressed) {
		var ret bool
		return ret
	}
	return *o.Suppressed
}

// GetSuppressedOk returns a tuple with the Suppressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInventoryRequestBodyFields) GetSuppressedOk() (*bool, bool) {
	if o == nil || IsNil(o.Suppressed) {
		return nil, false
	}
	return o.Suppressed, true
}

// HasSuppressed returns a boolean if a field has been set.
func (o *CreateInventoryRequestBodyFields) HasSuppressed() bool {
	if o != nil && !IsNil(o.Suppressed) {
		return true
	}

	return false
}

// SetSuppressed gets a reference to the given bool and assigns it to the Suppressed field.
func (o *CreateInventoryRequestBodyFields) SetSuppressed(v bool) {
	o.Suppressed = &v
}

func (o CreateInventoryRequestBodyFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateInventoryRequestBodyFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["configurationType"] = o.ConfigurationType
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.InventoryType) {
		toSerialize["inventoryType"] = o.InventoryType
	}
	toSerialize["inventorySource"] = o.InventorySource
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.InventoryKey) {
		toSerialize["inventoryKey"] = o.InventoryKey
	}
	if !IsNil(o.InventoryValue) {
		toSerialize["inventoryValue"] = o.InventoryValue
	}
	if !IsNil(o.TagSchema) {
		toSerialize["tagSchema"] = o.TagSchema
	}
	if !IsNil(o.DynamicTags) {
		toSerialize["dynamicTags"] = o.DynamicTags
	}
	if !IsNil(o.Criticality) {
		toSerialize["criticality"] = o.Criticality
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Suppressed) {
		toSerialize["suppressed"] = o.Suppressed
	}
	return toSerialize, nil
}

func (o *CreateInventoryRequestBodyFields) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"configurationType",
		"inventorySource",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateInventoryRequestBodyFields := _CreateInventoryRequestBodyFields{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateInventoryRequestBodyFields)

	if err != nil {
		return err
	}

	*o = CreateInventoryRequestBodyFields(varCreateInventoryRequestBodyFields)

	return err
}

type NullableCreateInventoryRequestBodyFields struct {
	value *CreateInventoryRequestBodyFields
	isSet bool
}

func (v NullableCreateInventoryRequestBodyFields) Get() *CreateInventoryRequestBodyFields {
	return v.value
}

func (v *NullableCreateInventoryRequestBodyFields) Set(val *CreateInventoryRequestBodyFields) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInventoryRequestBodyFields) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInventoryRequestBodyFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInventoryRequestBodyFields(val *CreateInventoryRequestBodyFields) *NullableCreateInventoryRequestBodyFields {
	return &NullableCreateInventoryRequestBodyFields{value: val, isSet: true}
}

func (v NullableCreateInventoryRequestBodyFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInventoryRequestBodyFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



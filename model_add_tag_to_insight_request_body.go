/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologiccsiem

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddTagToInsightRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddTagToInsightRequestBody{}

// AddTagToInsightRequestBody struct for AddTagToInsightRequestBody
type AddTagToInsightRequestBody struct {
	TagName string `json:"tagName"`
}

type _AddTagToInsightRequestBody AddTagToInsightRequestBody

// NewAddTagToInsightRequestBody instantiates a new AddTagToInsightRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddTagToInsightRequestBody(tagName string) *AddTagToInsightRequestBody {
	this := AddTagToInsightRequestBody{}
	this.TagName = tagName
	return &this
}

// NewAddTagToInsightRequestBodyWithDefaults instantiates a new AddTagToInsightRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddTagToInsightRequestBodyWithDefaults() *AddTagToInsightRequestBody {
	this := AddTagToInsightRequestBody{}
	return &this
}

// GetTagName returns the TagName field value
func (o *AddTagToInsightRequestBody) GetTagName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TagName
}

// GetTagNameOk returns a tuple with the TagName field value
// and a boolean to check if the value has been set.
func (o *AddTagToInsightRequestBody) GetTagNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagName, true
}

// SetTagName sets field value
func (o *AddTagToInsightRequestBody) SetTagName(v string) {
	o.TagName = v
}

func (o AddTagToInsightRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddTagToInsightRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tagName"] = o.TagName
	return toSerialize, nil
}

func (o *AddTagToInsightRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tagName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddTagToInsightRequestBody := _AddTagToInsightRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddTagToInsightRequestBody)

	if err != nil {
		return err
	}

	*o = AddTagToInsightRequestBody(varAddTagToInsightRequestBody)

	return err
}

type NullableAddTagToInsightRequestBody struct {
	value *AddTagToInsightRequestBody
	isSet bool
}

func (v NullableAddTagToInsightRequestBody) Get() *AddTagToInsightRequestBody {
	return v.value
}

func (v *NullableAddTagToInsightRequestBody) Set(val *AddTagToInsightRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAddTagToInsightRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAddTagToInsightRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddTagToInsightRequestBody(val *AddTagToInsightRequestBody) *NullableAddTagToInsightRequestBody {
	return &NullableAddTagToInsightRequestBody{value: val, isSet: true}
}

func (v NullableAddTagToInsightRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddTagToInsightRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



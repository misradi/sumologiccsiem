/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologiccsiem

import (
	"encoding/json"
)

// checks if the UpdateInsightStatusRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInsightStatusRequestBody{}

// UpdateInsightStatusRequestBody struct for UpdateInsightStatusRequestBody
type UpdateInsightStatusRequestBody struct {
	// The status to update this Insight to. Default values are \"new\", \"inprogress\", and \"closed\", but custom statuses can also be created in the UI.
	Status *string `json:"status,omitempty"`
	// The resolution reason for closing this Insight.
	Resolution *string `json:"resolution,omitempty"`
}

// NewUpdateInsightStatusRequestBody instantiates a new UpdateInsightStatusRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInsightStatusRequestBody() *UpdateInsightStatusRequestBody {
	this := UpdateInsightStatusRequestBody{}
	return &this
}

// NewUpdateInsightStatusRequestBodyWithDefaults instantiates a new UpdateInsightStatusRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInsightStatusRequestBodyWithDefaults() *UpdateInsightStatusRequestBody {
	this := UpdateInsightStatusRequestBody{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateInsightStatusRequestBody) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInsightStatusRequestBody) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateInsightStatusRequestBody) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdateInsightStatusRequestBody) SetStatus(v string) {
	o.Status = &v
}

// GetResolution returns the Resolution field value if set, zero value otherwise.
func (o *UpdateInsightStatusRequestBody) GetResolution() string {
	if o == nil || IsNil(o.Resolution) {
		var ret string
		return ret
	}
	return *o.Resolution
}

// GetResolutionOk returns a tuple with the Resolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInsightStatusRequestBody) GetResolutionOk() (*string, bool) {
	if o == nil || IsNil(o.Resolution) {
		return nil, false
	}
	return o.Resolution, true
}

// HasResolution returns a boolean if a field has been set.
func (o *UpdateInsightStatusRequestBody) HasResolution() bool {
	if o != nil && !IsNil(o.Resolution) {
		return true
	}

	return false
}

// SetResolution gets a reference to the given string and assigns it to the Resolution field.
func (o *UpdateInsightStatusRequestBody) SetResolution(v string) {
	o.Resolution = &v
}

func (o UpdateInsightStatusRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInsightStatusRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Resolution) {
		toSerialize["resolution"] = o.Resolution
	}
	return toSerialize, nil
}

type NullableUpdateInsightStatusRequestBody struct {
	value *UpdateInsightStatusRequestBody
	isSet bool
}

func (v NullableUpdateInsightStatusRequestBody) Get() *UpdateInsightStatusRequestBody {
	return v.value
}

func (v *NullableUpdateInsightStatusRequestBody) Set(val *UpdateInsightStatusRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInsightStatusRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInsightStatusRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInsightStatusRequestBody(val *UpdateInsightStatusRequestBody) *NullableUpdateInsightStatusRequestBody {
	return &NullableUpdateInsightStatusRequestBody{value: val, isSet: true}
}

func (v NullableUpdateInsightStatusRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInsightStatusRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologiccsiem

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExecuteAutomationRequestBodyFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecuteAutomationRequestBodyFields{}

// ExecuteAutomationRequestBodyFields struct for ExecuteAutomationRequestBodyFields
type ExecuteAutomationRequestBodyFields struct {
	ExecutionCseResources []ExecuteAutomationRequestBodyFieldsExecutionCseResourcesInner `json:"executionCseResources"`
	AutomationIds []string `json:"automationIds"`
}

type _ExecuteAutomationRequestBodyFields ExecuteAutomationRequestBodyFields

// NewExecuteAutomationRequestBodyFields instantiates a new ExecuteAutomationRequestBodyFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecuteAutomationRequestBodyFields(executionCseResources []ExecuteAutomationRequestBodyFieldsExecutionCseResourcesInner, automationIds []string) *ExecuteAutomationRequestBodyFields {
	this := ExecuteAutomationRequestBodyFields{}
	this.ExecutionCseResources = executionCseResources
	this.AutomationIds = automationIds
	return &this
}

// NewExecuteAutomationRequestBodyFieldsWithDefaults instantiates a new ExecuteAutomationRequestBodyFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecuteAutomationRequestBodyFieldsWithDefaults() *ExecuteAutomationRequestBodyFields {
	this := ExecuteAutomationRequestBodyFields{}
	return &this
}

// GetExecutionCseResources returns the ExecutionCseResources field value
func (o *ExecuteAutomationRequestBodyFields) GetExecutionCseResources() []ExecuteAutomationRequestBodyFieldsExecutionCseResourcesInner {
	if o == nil {
		var ret []ExecuteAutomationRequestBodyFieldsExecutionCseResourcesInner
		return ret
	}

	return o.ExecutionCseResources
}

// GetExecutionCseResourcesOk returns a tuple with the ExecutionCseResources field value
// and a boolean to check if the value has been set.
func (o *ExecuteAutomationRequestBodyFields) GetExecutionCseResourcesOk() ([]ExecuteAutomationRequestBodyFieldsExecutionCseResourcesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExecutionCseResources, true
}

// SetExecutionCseResources sets field value
func (o *ExecuteAutomationRequestBodyFields) SetExecutionCseResources(v []ExecuteAutomationRequestBodyFieldsExecutionCseResourcesInner) {
	o.ExecutionCseResources = v
}

// GetAutomationIds returns the AutomationIds field value
func (o *ExecuteAutomationRequestBodyFields) GetAutomationIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AutomationIds
}

// GetAutomationIdsOk returns a tuple with the AutomationIds field value
// and a boolean to check if the value has been set.
func (o *ExecuteAutomationRequestBodyFields) GetAutomationIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutomationIds, true
}

// SetAutomationIds sets field value
func (o *ExecuteAutomationRequestBodyFields) SetAutomationIds(v []string) {
	o.AutomationIds = v
}

func (o ExecuteAutomationRequestBodyFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecuteAutomationRequestBodyFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["executionCseResources"] = o.ExecutionCseResources
	toSerialize["automationIds"] = o.AutomationIds
	return toSerialize, nil
}

func (o *ExecuteAutomationRequestBodyFields) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"executionCseResources",
		"automationIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExecuteAutomationRequestBodyFields := _ExecuteAutomationRequestBodyFields{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExecuteAutomationRequestBodyFields)

	if err != nil {
		return err
	}

	*o = ExecuteAutomationRequestBodyFields(varExecuteAutomationRequestBodyFields)

	return err
}

type NullableExecuteAutomationRequestBodyFields struct {
	value *ExecuteAutomationRequestBodyFields
	isSet bool
}

func (v NullableExecuteAutomationRequestBodyFields) Get() *ExecuteAutomationRequestBodyFields {
	return v.value
}

func (v *NullableExecuteAutomationRequestBodyFields) Set(val *ExecuteAutomationRequestBodyFields) {
	v.value = val
	v.isSet = true
}

func (v NullableExecuteAutomationRequestBodyFields) IsSet() bool {
	return v.isSet
}

func (v *NullableExecuteAutomationRequestBodyFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecuteAutomationRequestBodyFields(val *ExecuteAutomationRequestBodyFields) *NullableExecuteAutomationRequestBodyFields {
	return &NullableExecuteAutomationRequestBodyFields{value: val, isSet: true}
}

func (v NullableExecuteAutomationRequestBodyFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecuteAutomationRequestBodyFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



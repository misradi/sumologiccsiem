/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BulkUpdateEntityCriticalityResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkUpdateEntityCriticalityResponseDataInner{}

// BulkUpdateEntityCriticalityResponseDataInner struct for BulkUpdateEntityCriticalityResponseDataInner
type BulkUpdateEntityCriticalityResponseDataInner struct {
	Id string `json:"id"`
	Criticality *string `json:"criticality,omitempty"`
}

type _BulkUpdateEntityCriticalityResponseDataInner BulkUpdateEntityCriticalityResponseDataInner

// NewBulkUpdateEntityCriticalityResponseDataInner instantiates a new BulkUpdateEntityCriticalityResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkUpdateEntityCriticalityResponseDataInner(id string) *BulkUpdateEntityCriticalityResponseDataInner {
	this := BulkUpdateEntityCriticalityResponseDataInner{}
	this.Id = id
	return &this
}

// NewBulkUpdateEntityCriticalityResponseDataInnerWithDefaults instantiates a new BulkUpdateEntityCriticalityResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkUpdateEntityCriticalityResponseDataInnerWithDefaults() *BulkUpdateEntityCriticalityResponseDataInner {
	this := BulkUpdateEntityCriticalityResponseDataInner{}
	return &this
}

// GetId returns the Id field value
func (o *BulkUpdateEntityCriticalityResponseDataInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BulkUpdateEntityCriticalityResponseDataInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BulkUpdateEntityCriticalityResponseDataInner) SetId(v string) {
	o.Id = v
}

// GetCriticality returns the Criticality field value if set, zero value otherwise.
func (o *BulkUpdateEntityCriticalityResponseDataInner) GetCriticality() string {
	if o == nil || IsNil(o.Criticality) {
		var ret string
		return ret
	}
	return *o.Criticality
}

// GetCriticalityOk returns a tuple with the Criticality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateEntityCriticalityResponseDataInner) GetCriticalityOk() (*string, bool) {
	if o == nil || IsNil(o.Criticality) {
		return nil, false
	}
	return o.Criticality, true
}

// HasCriticality returns a boolean if a field has been set.
func (o *BulkUpdateEntityCriticalityResponseDataInner) HasCriticality() bool {
	if o != nil && !IsNil(o.Criticality) {
		return true
	}

	return false
}

// SetCriticality gets a reference to the given string and assigns it to the Criticality field.
func (o *BulkUpdateEntityCriticalityResponseDataInner) SetCriticality(v string) {
	o.Criticality = &v
}

func (o BulkUpdateEntityCriticalityResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkUpdateEntityCriticalityResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Criticality) {
		toSerialize["criticality"] = o.Criticality
	}
	return toSerialize, nil
}

func (o *BulkUpdateEntityCriticalityResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkUpdateEntityCriticalityResponseDataInner := _BulkUpdateEntityCriticalityResponseDataInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBulkUpdateEntityCriticalityResponseDataInner)

	if err != nil {
		return err
	}

	*o = BulkUpdateEntityCriticalityResponseDataInner(varBulkUpdateEntityCriticalityResponseDataInner)

	return err
}

type NullableBulkUpdateEntityCriticalityResponseDataInner struct {
	value *BulkUpdateEntityCriticalityResponseDataInner
	isSet bool
}

func (v NullableBulkUpdateEntityCriticalityResponseDataInner) Get() *BulkUpdateEntityCriticalityResponseDataInner {
	return v.value
}

func (v *NullableBulkUpdateEntityCriticalityResponseDataInner) Set(val *BulkUpdateEntityCriticalityResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkUpdateEntityCriticalityResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkUpdateEntityCriticalityResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkUpdateEntityCriticalityResponseDataInner(val *BulkUpdateEntityCriticalityResponseDataInner) *NullableBulkUpdateEntityCriticalityResponseDataInner {
	return &NullableBulkUpdateEntityCriticalityResponseDataInner{value: val, isSet: true}
}

func (v NullableBulkUpdateEntityCriticalityResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkUpdateEntityCriticalityResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateAutomationRequestBodyFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAutomationRequestBodyFields{}

// UpdateAutomationRequestBodyFields struct for UpdateAutomationRequestBodyFields
type UpdateAutomationRequestBodyFields struct {
	CseResourceSubTypes []string `json:"cseResourceSubTypes,omitempty"`
	ExecutionTypes []string `json:"executionTypes,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
}

// NewUpdateAutomationRequestBodyFields instantiates a new UpdateAutomationRequestBodyFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAutomationRequestBodyFields() *UpdateAutomationRequestBodyFields {
	this := UpdateAutomationRequestBodyFields{}
	return &this
}

// NewUpdateAutomationRequestBodyFieldsWithDefaults instantiates a new UpdateAutomationRequestBodyFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAutomationRequestBodyFieldsWithDefaults() *UpdateAutomationRequestBodyFields {
	this := UpdateAutomationRequestBodyFields{}
	return &this
}

// GetCseResourceSubTypes returns the CseResourceSubTypes field value if set, zero value otherwise.
func (o *UpdateAutomationRequestBodyFields) GetCseResourceSubTypes() []string {
	if o == nil || IsNil(o.CseResourceSubTypes) {
		var ret []string
		return ret
	}
	return o.CseResourceSubTypes
}

// GetCseResourceSubTypesOk returns a tuple with the CseResourceSubTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAutomationRequestBodyFields) GetCseResourceSubTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.CseResourceSubTypes) {
		return nil, false
	}
	return o.CseResourceSubTypes, true
}

// HasCseResourceSubTypes returns a boolean if a field has been set.
func (o *UpdateAutomationRequestBodyFields) HasCseResourceSubTypes() bool {
	if o != nil && !IsNil(o.CseResourceSubTypes) {
		return true
	}

	return false
}

// SetCseResourceSubTypes gets a reference to the given []string and assigns it to the CseResourceSubTypes field.
func (o *UpdateAutomationRequestBodyFields) SetCseResourceSubTypes(v []string) {
	o.CseResourceSubTypes = v
}

// GetExecutionTypes returns the ExecutionTypes field value if set, zero value otherwise.
func (o *UpdateAutomationRequestBodyFields) GetExecutionTypes() []string {
	if o == nil || IsNil(o.ExecutionTypes) {
		var ret []string
		return ret
	}
	return o.ExecutionTypes
}

// GetExecutionTypesOk returns a tuple with the ExecutionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAutomationRequestBodyFields) GetExecutionTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.ExecutionTypes) {
		return nil, false
	}
	return o.ExecutionTypes, true
}

// HasExecutionTypes returns a boolean if a field has been set.
func (o *UpdateAutomationRequestBodyFields) HasExecutionTypes() bool {
	if o != nil && !IsNil(o.ExecutionTypes) {
		return true
	}

	return false
}

// SetExecutionTypes gets a reference to the given []string and assigns it to the ExecutionTypes field.
func (o *UpdateAutomationRequestBodyFields) SetExecutionTypes(v []string) {
	o.ExecutionTypes = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *UpdateAutomationRequestBodyFields) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAutomationRequestBodyFields) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *UpdateAutomationRequestBodyFields) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *UpdateAutomationRequestBodyFields) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o UpdateAutomationRequestBodyFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAutomationRequestBodyFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CseResourceSubTypes) {
		toSerialize["cseResourceSubTypes"] = o.CseResourceSubTypes
	}
	if !IsNil(o.ExecutionTypes) {
		toSerialize["executionTypes"] = o.ExecutionTypes
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableUpdateAutomationRequestBodyFields struct {
	value *UpdateAutomationRequestBodyFields
	isSet bool
}

func (v NullableUpdateAutomationRequestBodyFields) Get() *UpdateAutomationRequestBodyFields {
	return v.value
}

func (v *NullableUpdateAutomationRequestBodyFields) Set(val *UpdateAutomationRequestBodyFields) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAutomationRequestBodyFields) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAutomationRequestBodyFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAutomationRequestBodyFields(val *UpdateAutomationRequestBodyFields) *NullableUpdateAutomationRequestBodyFields {
	return &NullableUpdateAutomationRequestBodyFields{value: val, isSet: true}
}

func (v NullableUpdateAutomationRequestBodyFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAutomationRequestBodyFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologiccsiem

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ChainRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChainRule{}

// ChainRule struct for ChainRule
type ChainRule struct {
	Category *string `json:"category,omitempty"`
	ContentType string `json:"contentType"`
	Created time.Time `json:"created"`
	CreatedBy string `json:"createdBy"`
	Deleted bool `json:"deleted"`
	Enabled bool `json:"enabled"`
	EntitySelectors []GetRulesResponseDataObjectsInnerOneOfEntitySelectorsInner `json:"entitySelectors"`
	Id string `json:"id"`
	IsPrototype bool `json:"isPrototype"`
	LastUpdated time.Time `json:"lastUpdated"`
	LastUpdatedBy string `json:"lastUpdatedBy"`
	Name string `json:"name"`
	ParentJaskId *string `json:"parentJaskId,omitempty"`
	Status GetRulesResponseDataObjectsInnerOneOfStatus `json:"status"`
	RuleId int32 `json:"ruleId"`
	RuleSource string `json:"ruleSource"`
	RuleType string `json:"ruleType"`
	// The number of Signals generated by this Rule in the past 7 days
	SignalCount07d int32 `json:"signalCount07d"`
	// The number of Signals generated by this Rule in the past 24 hours
	SignalCount24h int32 `json:"signalCount24h"`
	SummaryExpression string `json:"summaryExpression"`
	Tags []string `json:"tags"`
	HasOverride bool `json:"hasOverride"`
	TagsOverride *GetRulesResponseDataObjectsInnerOneOfTagsOverride `json:"tagsOverride,omitempty"`
	IsPrototypeOverride *GetRulesResponseDataObjectsInnerOneOfIsPrototypeOverride `json:"isPrototypeOverride,omitempty"`
	EntitySelectorsOverride *GetRulesResponseDataObjectsInnerOneOfEntitySelectorsOverride `json:"entitySelectorsOverride,omitempty"`
	NameOverride *GetRulesResponseDataObjectsInnerOneOfNameOverride `json:"nameOverride,omitempty"`
	SummaryExpressionOverride *GetRulesResponseDataObjectsInnerOneOfNameOverride `json:"summaryExpressionOverride,omitempty"`
	AssetField string `json:"assetField"`
	// The description to be used on the generated Signal
	Description string `json:"description"`
	ExpressionsAndLimits []GetRulesResponseDataObjectsInnerOneOf3ExpressionsAndLimitsInner `json:"expressionsAndLimits"`
	GroupByFields []string `json:"groupByFields"`
	Ordered bool `json:"ordered"`
	Score int32 `json:"score"`
	Stream string `json:"stream"`
	Version int32 `json:"version"`
	// milliseconds
	WindowSize int32 `json:"windowSize"`
	WindowSizeName string `json:"windowSizeName"`
	DescriptionOverride *GetRulesResponseDataObjectsInnerOneOfNameOverride `json:"descriptionOverride,omitempty"`
	GroupByFieldsOverride *GetRulesResponseDataObjectsInnerOneOfTagsOverride `json:"groupByFieldsOverride,omitempty"`
	ScoreOverride *GetRulesResponseDataObjectsInnerOneOf1ScoreOverride `json:"scoreOverride,omitempty"`
	WindowSizeOverride *GetRulesResponseDataObjectsInnerOneOf1WindowSizeOverride `json:"windowSizeOverride,omitempty"`
	ExpressionsAndLimitsOverride *GetRulesResponseDataObjectsInnerOneOf3ExpressionsAndLimitsOverride `json:"expressionsAndLimitsOverride,omitempty"`
}

type _ChainRule ChainRule

// NewChainRule instantiates a new ChainRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChainRule(contentType string, created time.Time, createdBy string, deleted bool, enabled bool, entitySelectors []GetRulesResponseDataObjectsInnerOneOfEntitySelectorsInner, id string, isPrototype bool, lastUpdated time.Time, lastUpdatedBy string, name string, status GetRulesResponseDataObjectsInnerOneOfStatus, ruleId int32, ruleSource string, ruleType string, signalCount07d int32, signalCount24h int32, summaryExpression string, tags []string, hasOverride bool, assetField string, description string, expressionsAndLimits []GetRulesResponseDataObjectsInnerOneOf3ExpressionsAndLimitsInner, groupByFields []string, ordered bool, score int32, stream string, version int32, windowSize int32, windowSizeName string) *ChainRule {
	this := ChainRule{}
	this.ContentType = contentType
	this.Created = created
	this.CreatedBy = createdBy
	this.Deleted = deleted
	this.Enabled = enabled
	this.EntitySelectors = entitySelectors
	this.Id = id
	this.IsPrototype = isPrototype
	this.LastUpdated = lastUpdated
	this.LastUpdatedBy = lastUpdatedBy
	this.Name = name
	this.Status = status
	this.RuleId = ruleId
	this.RuleSource = ruleSource
	this.RuleType = ruleType
	this.SignalCount07d = signalCount07d
	this.SignalCount24h = signalCount24h
	this.SummaryExpression = summaryExpression
	this.Tags = tags
	this.HasOverride = hasOverride
	this.AssetField = assetField
	this.Description = description
	this.ExpressionsAndLimits = expressionsAndLimits
	this.GroupByFields = groupByFields
	this.Ordered = ordered
	this.Score = score
	this.Stream = stream
	this.Version = version
	this.WindowSize = windowSize
	this.WindowSizeName = windowSizeName
	return &this
}

// NewChainRuleWithDefaults instantiates a new ChainRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChainRuleWithDefaults() *ChainRule {
	this := ChainRule{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ChainRule) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainRule) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ChainRule) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ChainRule) SetCategory(v string) {
	o.Category = &v
}

// GetContentType returns the ContentType field value
func (o *ChainRule) GetContentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentType, true
}

// SetContentType sets field value
func (o *ChainRule) SetContentType(v string) {
	o.ContentType = v
}

// GetCreated returns the Created field value
func (o *ChainRule) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ChainRule) SetCreated(v time.Time) {
	o.Created = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *ChainRule) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *ChainRule) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetDeleted returns the Deleted field value
func (o *ChainRule) GetDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deleted, true
}

// SetDeleted sets field value
func (o *ChainRule) SetDeleted(v bool) {
	o.Deleted = v
}

// GetEnabled returns the Enabled field value
func (o *ChainRule) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ChainRule) SetEnabled(v bool) {
	o.Enabled = v
}

// GetEntitySelectors returns the EntitySelectors field value
func (o *ChainRule) GetEntitySelectors() []GetRulesResponseDataObjectsInnerOneOfEntitySelectorsInner {
	if o == nil {
		var ret []GetRulesResponseDataObjectsInnerOneOfEntitySelectorsInner
		return ret
	}

	return o.EntitySelectors
}

// GetEntitySelectorsOk returns a tuple with the EntitySelectors field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetEntitySelectorsOk() ([]GetRulesResponseDataObjectsInnerOneOfEntitySelectorsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.EntitySelectors, true
}

// SetEntitySelectors sets field value
func (o *ChainRule) SetEntitySelectors(v []GetRulesResponseDataObjectsInnerOneOfEntitySelectorsInner) {
	o.EntitySelectors = v
}

// GetId returns the Id field value
func (o *ChainRule) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ChainRule) SetId(v string) {
	o.Id = v
}

// GetIsPrototype returns the IsPrototype field value
func (o *ChainRule) GetIsPrototype() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPrototype
}

// GetIsPrototypeOk returns a tuple with the IsPrototype field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetIsPrototypeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPrototype, true
}

// SetIsPrototype sets field value
func (o *ChainRule) SetIsPrototype(v bool) {
	o.IsPrototype = v
}

// GetLastUpdated returns the LastUpdated field value
func (o *ChainRule) GetLastUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdated, true
}

// SetLastUpdated sets field value
func (o *ChainRule) SetLastUpdated(v time.Time) {
	o.LastUpdated = v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value
func (o *ChainRule) GetLastUpdatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetLastUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdatedBy, true
}

// SetLastUpdatedBy sets field value
func (o *ChainRule) SetLastUpdatedBy(v string) {
	o.LastUpdatedBy = v
}

// GetName returns the Name field value
func (o *ChainRule) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ChainRule) SetName(v string) {
	o.Name = v
}

// GetParentJaskId returns the ParentJaskId field value if set, zero value otherwise.
func (o *ChainRule) GetParentJaskId() string {
	if o == nil || IsNil(o.ParentJaskId) {
		var ret string
		return ret
	}
	return *o.ParentJaskId
}

// GetParentJaskIdOk returns a tuple with the ParentJaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainRule) GetParentJaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentJaskId) {
		return nil, false
	}
	return o.ParentJaskId, true
}

// HasParentJaskId returns a boolean if a field has been set.
func (o *ChainRule) HasParentJaskId() bool {
	if o != nil && !IsNil(o.ParentJaskId) {
		return true
	}

	return false
}

// SetParentJaskId gets a reference to the given string and assigns it to the ParentJaskId field.
func (o *ChainRule) SetParentJaskId(v string) {
	o.ParentJaskId = &v
}

// GetStatus returns the Status field value
func (o *ChainRule) GetStatus() GetRulesResponseDataObjectsInnerOneOfStatus {
	if o == nil {
		var ret GetRulesResponseDataObjectsInnerOneOfStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetStatusOk() (*GetRulesResponseDataObjectsInnerOneOfStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ChainRule) SetStatus(v GetRulesResponseDataObjectsInnerOneOfStatus) {
	o.Status = v
}

// GetRuleId returns the RuleId field value
func (o *ChainRule) GetRuleId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetRuleIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleId, true
}

// SetRuleId sets field value
func (o *ChainRule) SetRuleId(v int32) {
	o.RuleId = v
}

// GetRuleSource returns the RuleSource field value
func (o *ChainRule) GetRuleSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleSource
}

// GetRuleSourceOk returns a tuple with the RuleSource field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetRuleSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleSource, true
}

// SetRuleSource sets field value
func (o *ChainRule) SetRuleSource(v string) {
	o.RuleSource = v
}

// GetRuleType returns the RuleType field value
func (o *ChainRule) GetRuleType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleType
}

// GetRuleTypeOk returns a tuple with the RuleType field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetRuleTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleType, true
}

// SetRuleType sets field value
func (o *ChainRule) SetRuleType(v string) {
	o.RuleType = v
}

// GetSignalCount07d returns the SignalCount07d field value
func (o *ChainRule) GetSignalCount07d() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SignalCount07d
}

// GetSignalCount07dOk returns a tuple with the SignalCount07d field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetSignalCount07dOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignalCount07d, true
}

// SetSignalCount07d sets field value
func (o *ChainRule) SetSignalCount07d(v int32) {
	o.SignalCount07d = v
}

// GetSignalCount24h returns the SignalCount24h field value
func (o *ChainRule) GetSignalCount24h() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SignalCount24h
}

// GetSignalCount24hOk returns a tuple with the SignalCount24h field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetSignalCount24hOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignalCount24h, true
}

// SetSignalCount24h sets field value
func (o *ChainRule) SetSignalCount24h(v int32) {
	o.SignalCount24h = v
}

// GetSummaryExpression returns the SummaryExpression field value
func (o *ChainRule) GetSummaryExpression() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SummaryExpression
}

// GetSummaryExpressionOk returns a tuple with the SummaryExpression field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetSummaryExpressionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SummaryExpression, true
}

// SetSummaryExpression sets field value
func (o *ChainRule) SetSummaryExpression(v string) {
	o.SummaryExpression = v
}

// GetTags returns the Tags field value
func (o *ChainRule) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *ChainRule) SetTags(v []string) {
	o.Tags = v
}

// GetHasOverride returns the HasOverride field value
func (o *ChainRule) GetHasOverride() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasOverride
}

// GetHasOverrideOk returns a tuple with the HasOverride field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetHasOverrideOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasOverride, true
}

// SetHasOverride sets field value
func (o *ChainRule) SetHasOverride(v bool) {
	o.HasOverride = v
}

// GetTagsOverride returns the TagsOverride field value if set, zero value otherwise.
func (o *ChainRule) GetTagsOverride() GetRulesResponseDataObjectsInnerOneOfTagsOverride {
	if o == nil || IsNil(o.TagsOverride) {
		var ret GetRulesResponseDataObjectsInnerOneOfTagsOverride
		return ret
	}
	return *o.TagsOverride
}

// GetTagsOverrideOk returns a tuple with the TagsOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainRule) GetTagsOverrideOk() (*GetRulesResponseDataObjectsInnerOneOfTagsOverride, bool) {
	if o == nil || IsNil(o.TagsOverride) {
		return nil, false
	}
	return o.TagsOverride, true
}

// HasTagsOverride returns a boolean if a field has been set.
func (o *ChainRule) HasTagsOverride() bool {
	if o != nil && !IsNil(o.TagsOverride) {
		return true
	}

	return false
}

// SetTagsOverride gets a reference to the given GetRulesResponseDataObjectsInnerOneOfTagsOverride and assigns it to the TagsOverride field.
func (o *ChainRule) SetTagsOverride(v GetRulesResponseDataObjectsInnerOneOfTagsOverride) {
	o.TagsOverride = &v
}

// GetIsPrototypeOverride returns the IsPrototypeOverride field value if set, zero value otherwise.
func (o *ChainRule) GetIsPrototypeOverride() GetRulesResponseDataObjectsInnerOneOfIsPrototypeOverride {
	if o == nil || IsNil(o.IsPrototypeOverride) {
		var ret GetRulesResponseDataObjectsInnerOneOfIsPrototypeOverride
		return ret
	}
	return *o.IsPrototypeOverride
}

// GetIsPrototypeOverrideOk returns a tuple with the IsPrototypeOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainRule) GetIsPrototypeOverrideOk() (*GetRulesResponseDataObjectsInnerOneOfIsPrototypeOverride, bool) {
	if o == nil || IsNil(o.IsPrototypeOverride) {
		return nil, false
	}
	return o.IsPrototypeOverride, true
}

// HasIsPrototypeOverride returns a boolean if a field has been set.
func (o *ChainRule) HasIsPrototypeOverride() bool {
	if o != nil && !IsNil(o.IsPrototypeOverride) {
		return true
	}

	return false
}

// SetIsPrototypeOverride gets a reference to the given GetRulesResponseDataObjectsInnerOneOfIsPrototypeOverride and assigns it to the IsPrototypeOverride field.
func (o *ChainRule) SetIsPrototypeOverride(v GetRulesResponseDataObjectsInnerOneOfIsPrototypeOverride) {
	o.IsPrototypeOverride = &v
}

// GetEntitySelectorsOverride returns the EntitySelectorsOverride field value if set, zero value otherwise.
func (o *ChainRule) GetEntitySelectorsOverride() GetRulesResponseDataObjectsInnerOneOfEntitySelectorsOverride {
	if o == nil || IsNil(o.EntitySelectorsOverride) {
		var ret GetRulesResponseDataObjectsInnerOneOfEntitySelectorsOverride
		return ret
	}
	return *o.EntitySelectorsOverride
}

// GetEntitySelectorsOverrideOk returns a tuple with the EntitySelectorsOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainRule) GetEntitySelectorsOverrideOk() (*GetRulesResponseDataObjectsInnerOneOfEntitySelectorsOverride, bool) {
	if o == nil || IsNil(o.EntitySelectorsOverride) {
		return nil, false
	}
	return o.EntitySelectorsOverride, true
}

// HasEntitySelectorsOverride returns a boolean if a field has been set.
func (o *ChainRule) HasEntitySelectorsOverride() bool {
	if o != nil && !IsNil(o.EntitySelectorsOverride) {
		return true
	}

	return false
}

// SetEntitySelectorsOverride gets a reference to the given GetRulesResponseDataObjectsInnerOneOfEntitySelectorsOverride and assigns it to the EntitySelectorsOverride field.
func (o *ChainRule) SetEntitySelectorsOverride(v GetRulesResponseDataObjectsInnerOneOfEntitySelectorsOverride) {
	o.EntitySelectorsOverride = &v
}

// GetNameOverride returns the NameOverride field value if set, zero value otherwise.
func (o *ChainRule) GetNameOverride() GetRulesResponseDataObjectsInnerOneOfNameOverride {
	if o == nil || IsNil(o.NameOverride) {
		var ret GetRulesResponseDataObjectsInnerOneOfNameOverride
		return ret
	}
	return *o.NameOverride
}

// GetNameOverrideOk returns a tuple with the NameOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainRule) GetNameOverrideOk() (*GetRulesResponseDataObjectsInnerOneOfNameOverride, bool) {
	if o == nil || IsNil(o.NameOverride) {
		return nil, false
	}
	return o.NameOverride, true
}

// HasNameOverride returns a boolean if a field has been set.
func (o *ChainRule) HasNameOverride() bool {
	if o != nil && !IsNil(o.NameOverride) {
		return true
	}

	return false
}

// SetNameOverride gets a reference to the given GetRulesResponseDataObjectsInnerOneOfNameOverride and assigns it to the NameOverride field.
func (o *ChainRule) SetNameOverride(v GetRulesResponseDataObjectsInnerOneOfNameOverride) {
	o.NameOverride = &v
}

// GetSummaryExpressionOverride returns the SummaryExpressionOverride field value if set, zero value otherwise.
func (o *ChainRule) GetSummaryExpressionOverride() GetRulesResponseDataObjectsInnerOneOfNameOverride {
	if o == nil || IsNil(o.SummaryExpressionOverride) {
		var ret GetRulesResponseDataObjectsInnerOneOfNameOverride
		return ret
	}
	return *o.SummaryExpressionOverride
}

// GetSummaryExpressionOverrideOk returns a tuple with the SummaryExpressionOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainRule) GetSummaryExpressionOverrideOk() (*GetRulesResponseDataObjectsInnerOneOfNameOverride, bool) {
	if o == nil || IsNil(o.SummaryExpressionOverride) {
		return nil, false
	}
	return o.SummaryExpressionOverride, true
}

// HasSummaryExpressionOverride returns a boolean if a field has been set.
func (o *ChainRule) HasSummaryExpressionOverride() bool {
	if o != nil && !IsNil(o.SummaryExpressionOverride) {
		return true
	}

	return false
}

// SetSummaryExpressionOverride gets a reference to the given GetRulesResponseDataObjectsInnerOneOfNameOverride and assigns it to the SummaryExpressionOverride field.
func (o *ChainRule) SetSummaryExpressionOverride(v GetRulesResponseDataObjectsInnerOneOfNameOverride) {
	o.SummaryExpressionOverride = &v
}

// GetAssetField returns the AssetField field value
func (o *ChainRule) GetAssetField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetField
}

// GetAssetFieldOk returns a tuple with the AssetField field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetAssetFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetField, true
}

// SetAssetField sets field value
func (o *ChainRule) SetAssetField(v string) {
	o.AssetField = v
}

// GetDescription returns the Description field value
func (o *ChainRule) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ChainRule) SetDescription(v string) {
	o.Description = v
}

// GetExpressionsAndLimits returns the ExpressionsAndLimits field value
func (o *ChainRule) GetExpressionsAndLimits() []GetRulesResponseDataObjectsInnerOneOf3ExpressionsAndLimitsInner {
	if o == nil {
		var ret []GetRulesResponseDataObjectsInnerOneOf3ExpressionsAndLimitsInner
		return ret
	}

	return o.ExpressionsAndLimits
}

// GetExpressionsAndLimitsOk returns a tuple with the ExpressionsAndLimits field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetExpressionsAndLimitsOk() ([]GetRulesResponseDataObjectsInnerOneOf3ExpressionsAndLimitsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpressionsAndLimits, true
}

// SetExpressionsAndLimits sets field value
func (o *ChainRule) SetExpressionsAndLimits(v []GetRulesResponseDataObjectsInnerOneOf3ExpressionsAndLimitsInner) {
	o.ExpressionsAndLimits = v
}

// GetGroupByFields returns the GroupByFields field value
func (o *ChainRule) GetGroupByFields() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.GroupByFields
}

// GetGroupByFieldsOk returns a tuple with the GroupByFields field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetGroupByFieldsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupByFields, true
}

// SetGroupByFields sets field value
func (o *ChainRule) SetGroupByFields(v []string) {
	o.GroupByFields = v
}

// GetOrdered returns the Ordered field value
func (o *ChainRule) GetOrdered() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Ordered
}

// GetOrderedOk returns a tuple with the Ordered field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetOrderedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ordered, true
}

// SetOrdered sets field value
func (o *ChainRule) SetOrdered(v bool) {
	o.Ordered = v
}

// GetScore returns the Score field value
func (o *ChainRule) GetScore() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetScoreOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value
func (o *ChainRule) SetScore(v int32) {
	o.Score = v
}

// GetStream returns the Stream field value
func (o *ChainRule) GetStream() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Stream
}

// GetStreamOk returns a tuple with the Stream field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetStreamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stream, true
}

// SetStream sets field value
func (o *ChainRule) SetStream(v string) {
	o.Stream = v
}

// GetVersion returns the Version field value
func (o *ChainRule) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ChainRule) SetVersion(v int32) {
	o.Version = v
}

// GetWindowSize returns the WindowSize field value
func (o *ChainRule) GetWindowSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WindowSize
}

// GetWindowSizeOk returns a tuple with the WindowSize field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetWindowSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WindowSize, true
}

// SetWindowSize sets field value
func (o *ChainRule) SetWindowSize(v int32) {
	o.WindowSize = v
}

// GetWindowSizeName returns the WindowSizeName field value
func (o *ChainRule) GetWindowSizeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WindowSizeName
}

// GetWindowSizeNameOk returns a tuple with the WindowSizeName field value
// and a boolean to check if the value has been set.
func (o *ChainRule) GetWindowSizeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WindowSizeName, true
}

// SetWindowSizeName sets field value
func (o *ChainRule) SetWindowSizeName(v string) {
	o.WindowSizeName = v
}

// GetDescriptionOverride returns the DescriptionOverride field value if set, zero value otherwise.
func (o *ChainRule) GetDescriptionOverride() GetRulesResponseDataObjectsInnerOneOfNameOverride {
	if o == nil || IsNil(o.DescriptionOverride) {
		var ret GetRulesResponseDataObjectsInnerOneOfNameOverride
		return ret
	}
	return *o.DescriptionOverride
}

// GetDescriptionOverrideOk returns a tuple with the DescriptionOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainRule) GetDescriptionOverrideOk() (*GetRulesResponseDataObjectsInnerOneOfNameOverride, bool) {
	if o == nil || IsNil(o.DescriptionOverride) {
		return nil, false
	}
	return o.DescriptionOverride, true
}

// HasDescriptionOverride returns a boolean if a field has been set.
func (o *ChainRule) HasDescriptionOverride() bool {
	if o != nil && !IsNil(o.DescriptionOverride) {
		return true
	}

	return false
}

// SetDescriptionOverride gets a reference to the given GetRulesResponseDataObjectsInnerOneOfNameOverride and assigns it to the DescriptionOverride field.
func (o *ChainRule) SetDescriptionOverride(v GetRulesResponseDataObjectsInnerOneOfNameOverride) {
	o.DescriptionOverride = &v
}

// GetGroupByFieldsOverride returns the GroupByFieldsOverride field value if set, zero value otherwise.
func (o *ChainRule) GetGroupByFieldsOverride() GetRulesResponseDataObjectsInnerOneOfTagsOverride {
	if o == nil || IsNil(o.GroupByFieldsOverride) {
		var ret GetRulesResponseDataObjectsInnerOneOfTagsOverride
		return ret
	}
	return *o.GroupByFieldsOverride
}

// GetGroupByFieldsOverrideOk returns a tuple with the GroupByFieldsOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainRule) GetGroupByFieldsOverrideOk() (*GetRulesResponseDataObjectsInnerOneOfTagsOverride, bool) {
	if o == nil || IsNil(o.GroupByFieldsOverride) {
		return nil, false
	}
	return o.GroupByFieldsOverride, true
}

// HasGroupByFieldsOverride returns a boolean if a field has been set.
func (o *ChainRule) HasGroupByFieldsOverride() bool {
	if o != nil && !IsNil(o.GroupByFieldsOverride) {
		return true
	}

	return false
}

// SetGroupByFieldsOverride gets a reference to the given GetRulesResponseDataObjectsInnerOneOfTagsOverride and assigns it to the GroupByFieldsOverride field.
func (o *ChainRule) SetGroupByFieldsOverride(v GetRulesResponseDataObjectsInnerOneOfTagsOverride) {
	o.GroupByFieldsOverride = &v
}

// GetScoreOverride returns the ScoreOverride field value if set, zero value otherwise.
func (o *ChainRule) GetScoreOverride() GetRulesResponseDataObjectsInnerOneOf1ScoreOverride {
	if o == nil || IsNil(o.ScoreOverride) {
		var ret GetRulesResponseDataObjectsInnerOneOf1ScoreOverride
		return ret
	}
	return *o.ScoreOverride
}

// GetScoreOverrideOk returns a tuple with the ScoreOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainRule) GetScoreOverrideOk() (*GetRulesResponseDataObjectsInnerOneOf1ScoreOverride, bool) {
	if o == nil || IsNil(o.ScoreOverride) {
		return nil, false
	}
	return o.ScoreOverride, true
}

// HasScoreOverride returns a boolean if a field has been set.
func (o *ChainRule) HasScoreOverride() bool {
	if o != nil && !IsNil(o.ScoreOverride) {
		return true
	}

	return false
}

// SetScoreOverride gets a reference to the given GetRulesResponseDataObjectsInnerOneOf1ScoreOverride and assigns it to the ScoreOverride field.
func (o *ChainRule) SetScoreOverride(v GetRulesResponseDataObjectsInnerOneOf1ScoreOverride) {
	o.ScoreOverride = &v
}

// GetWindowSizeOverride returns the WindowSizeOverride field value if set, zero value otherwise.
func (o *ChainRule) GetWindowSizeOverride() GetRulesResponseDataObjectsInnerOneOf1WindowSizeOverride {
	if o == nil || IsNil(o.WindowSizeOverride) {
		var ret GetRulesResponseDataObjectsInnerOneOf1WindowSizeOverride
		return ret
	}
	return *o.WindowSizeOverride
}

// GetWindowSizeOverrideOk returns a tuple with the WindowSizeOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainRule) GetWindowSizeOverrideOk() (*GetRulesResponseDataObjectsInnerOneOf1WindowSizeOverride, bool) {
	if o == nil || IsNil(o.WindowSizeOverride) {
		return nil, false
	}
	return o.WindowSizeOverride, true
}

// HasWindowSizeOverride returns a boolean if a field has been set.
func (o *ChainRule) HasWindowSizeOverride() bool {
	if o != nil && !IsNil(o.WindowSizeOverride) {
		return true
	}

	return false
}

// SetWindowSizeOverride gets a reference to the given GetRulesResponseDataObjectsInnerOneOf1WindowSizeOverride and assigns it to the WindowSizeOverride field.
func (o *ChainRule) SetWindowSizeOverride(v GetRulesResponseDataObjectsInnerOneOf1WindowSizeOverride) {
	o.WindowSizeOverride = &v
}

// GetExpressionsAndLimitsOverride returns the ExpressionsAndLimitsOverride field value if set, zero value otherwise.
func (o *ChainRule) GetExpressionsAndLimitsOverride() GetRulesResponseDataObjectsInnerOneOf3ExpressionsAndLimitsOverride {
	if o == nil || IsNil(o.ExpressionsAndLimitsOverride) {
		var ret GetRulesResponseDataObjectsInnerOneOf3ExpressionsAndLimitsOverride
		return ret
	}
	return *o.ExpressionsAndLimitsOverride
}

// GetExpressionsAndLimitsOverrideOk returns a tuple with the ExpressionsAndLimitsOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChainRule) GetExpressionsAndLimitsOverrideOk() (*GetRulesResponseDataObjectsInnerOneOf3ExpressionsAndLimitsOverride, bool) {
	if o == nil || IsNil(o.ExpressionsAndLimitsOverride) {
		return nil, false
	}
	return o.ExpressionsAndLimitsOverride, true
}

// HasExpressionsAndLimitsOverride returns a boolean if a field has been set.
func (o *ChainRule) HasExpressionsAndLimitsOverride() bool {
	if o != nil && !IsNil(o.ExpressionsAndLimitsOverride) {
		return true
	}

	return false
}

// SetExpressionsAndLimitsOverride gets a reference to the given GetRulesResponseDataObjectsInnerOneOf3ExpressionsAndLimitsOverride and assigns it to the ExpressionsAndLimitsOverride field.
func (o *ChainRule) SetExpressionsAndLimitsOverride(v GetRulesResponseDataObjectsInnerOneOf3ExpressionsAndLimitsOverride) {
	o.ExpressionsAndLimitsOverride = &v
}

func (o ChainRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChainRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	toSerialize["contentType"] = o.ContentType
	toSerialize["created"] = o.Created
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["deleted"] = o.Deleted
	toSerialize["enabled"] = o.Enabled
	toSerialize["entitySelectors"] = o.EntitySelectors
	toSerialize["id"] = o.Id
	toSerialize["isPrototype"] = o.IsPrototype
	toSerialize["lastUpdated"] = o.LastUpdated
	toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	toSerialize["name"] = o.Name
	if !IsNil(o.ParentJaskId) {
		toSerialize["parentJaskId"] = o.ParentJaskId
	}
	toSerialize["status"] = o.Status
	toSerialize["ruleId"] = o.RuleId
	toSerialize["ruleSource"] = o.RuleSource
	toSerialize["ruleType"] = o.RuleType
	toSerialize["signalCount07d"] = o.SignalCount07d
	toSerialize["signalCount24h"] = o.SignalCount24h
	toSerialize["summaryExpression"] = o.SummaryExpression
	toSerialize["tags"] = o.Tags
	toSerialize["hasOverride"] = o.HasOverride
	if !IsNil(o.TagsOverride) {
		toSerialize["tagsOverride"] = o.TagsOverride
	}
	if !IsNil(o.IsPrototypeOverride) {
		toSerialize["isPrototypeOverride"] = o.IsPrototypeOverride
	}
	if !IsNil(o.EntitySelectorsOverride) {
		toSerialize["entitySelectorsOverride"] = o.EntitySelectorsOverride
	}
	if !IsNil(o.NameOverride) {
		toSerialize["nameOverride"] = o.NameOverride
	}
	if !IsNil(o.SummaryExpressionOverride) {
		toSerialize["summaryExpressionOverride"] = o.SummaryExpressionOverride
	}
	toSerialize["assetField"] = o.AssetField
	toSerialize["description"] = o.Description
	toSerialize["expressionsAndLimits"] = o.ExpressionsAndLimits
	toSerialize["groupByFields"] = o.GroupByFields
	toSerialize["ordered"] = o.Ordered
	toSerialize["score"] = o.Score
	toSerialize["stream"] = o.Stream
	toSerialize["version"] = o.Version
	toSerialize["windowSize"] = o.WindowSize
	toSerialize["windowSizeName"] = o.WindowSizeName
	if !IsNil(o.DescriptionOverride) {
		toSerialize["descriptionOverride"] = o.DescriptionOverride
	}
	if !IsNil(o.GroupByFieldsOverride) {
		toSerialize["groupByFieldsOverride"] = o.GroupByFieldsOverride
	}
	if !IsNil(o.ScoreOverride) {
		toSerialize["scoreOverride"] = o.ScoreOverride
	}
	if !IsNil(o.WindowSizeOverride) {
		toSerialize["windowSizeOverride"] = o.WindowSizeOverride
	}
	if !IsNil(o.ExpressionsAndLimitsOverride) {
		toSerialize["expressionsAndLimitsOverride"] = o.ExpressionsAndLimitsOverride
	}
	return toSerialize, nil
}

func (o *ChainRule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contentType",
		"created",
		"createdBy",
		"deleted",
		"enabled",
		"entitySelectors",
		"id",
		"isPrototype",
		"lastUpdated",
		"lastUpdatedBy",
		"name",
		"status",
		"ruleId",
		"ruleSource",
		"ruleType",
		"signalCount07d",
		"signalCount24h",
		"summaryExpression",
		"tags",
		"hasOverride",
		"assetField",
		"description",
		"expressionsAndLimits",
		"groupByFields",
		"ordered",
		"score",
		"stream",
		"version",
		"windowSize",
		"windowSizeName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChainRule := _ChainRule{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChainRule)

	if err != nil {
		return err
	}

	*o = ChainRule(varChainRule)

	return err
}

type NullableChainRule struct {
	value *ChainRule
	isSet bool
}

func (v NullableChainRule) Get() *ChainRule {
	return v.value
}

func (v *NullableChainRule) Set(val *ChainRule) {
	v.value = val
	v.isSet = true
}

func (v NullableChainRule) IsSet() bool {
	return v.isSet
}

func (v *NullableChainRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChainRule(val *ChainRule) *NullableChainRule {
	return &NullableChainRule{value: val, isSet: true}
}

func (v NullableChainRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChainRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



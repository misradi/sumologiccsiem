/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologiccsiem

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateInsightConfigurationRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInsightConfigurationRequestBody{}

// UpdateInsightConfigurationRequestBody struct for UpdateInsightConfigurationRequestBody
type UpdateInsightConfigurationRequestBody struct {
	Config UpdateInsightConfigurationRequestBodyConfig `json:"config"`
}

type _UpdateInsightConfigurationRequestBody UpdateInsightConfigurationRequestBody

// NewUpdateInsightConfigurationRequestBody instantiates a new UpdateInsightConfigurationRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInsightConfigurationRequestBody(config UpdateInsightConfigurationRequestBodyConfig) *UpdateInsightConfigurationRequestBody {
	this := UpdateInsightConfigurationRequestBody{}
	this.Config = config
	return &this
}

// NewUpdateInsightConfigurationRequestBodyWithDefaults instantiates a new UpdateInsightConfigurationRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInsightConfigurationRequestBodyWithDefaults() *UpdateInsightConfigurationRequestBody {
	this := UpdateInsightConfigurationRequestBody{}
	return &this
}

// GetConfig returns the Config field value
func (o *UpdateInsightConfigurationRequestBody) GetConfig() UpdateInsightConfigurationRequestBodyConfig {
	if o == nil {
		var ret UpdateInsightConfigurationRequestBodyConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *UpdateInsightConfigurationRequestBody) GetConfigOk() (*UpdateInsightConfigurationRequestBodyConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *UpdateInsightConfigurationRequestBody) SetConfig(v UpdateInsightConfigurationRequestBodyConfig) {
	o.Config = v
}

func (o UpdateInsightConfigurationRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInsightConfigurationRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["config"] = o.Config
	return toSerialize, nil
}

func (o *UpdateInsightConfigurationRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"config",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateInsightConfigurationRequestBody := _UpdateInsightConfigurationRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateInsightConfigurationRequestBody)

	if err != nil {
		return err
	}

	*o = UpdateInsightConfigurationRequestBody(varUpdateInsightConfigurationRequestBody)

	return err
}

type NullableUpdateInsightConfigurationRequestBody struct {
	value *UpdateInsightConfigurationRequestBody
	isSet bool
}

func (v NullableUpdateInsightConfigurationRequestBody) Get() *UpdateInsightConfigurationRequestBody {
	return v.value
}

func (v *NullableUpdateInsightConfigurationRequestBody) Set(val *UpdateInsightConfigurationRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInsightConfigurationRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInsightConfigurationRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInsightConfigurationRequestBody(val *UpdateInsightConfigurationRequestBody) *NullableUpdateInsightConfigurationRequestBody {
	return &NullableUpdateInsightConfigurationRequestBody{value: val, isSet: true}
}

func (v NullableUpdateInsightConfigurationRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInsightConfigurationRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



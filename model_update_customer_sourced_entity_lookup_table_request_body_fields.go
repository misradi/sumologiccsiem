/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologiccsiem

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateCustomerSourcedEntityLookupTableRequestBodyFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCustomerSourcedEntityLookupTableRequestBodyFields{}

// UpdateCustomerSourcedEntityLookupTableRequestBodyFields struct for UpdateCustomerSourcedEntityLookupTableRequestBodyFields
type UpdateCustomerSourcedEntityLookupTableRequestBodyFields struct {
	SourceCategory string `json:"sourceCategory"`
}

type _UpdateCustomerSourcedEntityLookupTableRequestBodyFields UpdateCustomerSourcedEntityLookupTableRequestBodyFields

// NewUpdateCustomerSourcedEntityLookupTableRequestBodyFields instantiates a new UpdateCustomerSourcedEntityLookupTableRequestBodyFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCustomerSourcedEntityLookupTableRequestBodyFields(sourceCategory string) *UpdateCustomerSourcedEntityLookupTableRequestBodyFields {
	this := UpdateCustomerSourcedEntityLookupTableRequestBodyFields{}
	this.SourceCategory = sourceCategory
	return &this
}

// NewUpdateCustomerSourcedEntityLookupTableRequestBodyFieldsWithDefaults instantiates a new UpdateCustomerSourcedEntityLookupTableRequestBodyFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCustomerSourcedEntityLookupTableRequestBodyFieldsWithDefaults() *UpdateCustomerSourcedEntityLookupTableRequestBodyFields {
	this := UpdateCustomerSourcedEntityLookupTableRequestBodyFields{}
	return &this
}

// GetSourceCategory returns the SourceCategory field value
func (o *UpdateCustomerSourcedEntityLookupTableRequestBodyFields) GetSourceCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceCategory
}

// GetSourceCategoryOk returns a tuple with the SourceCategory field value
// and a boolean to check if the value has been set.
func (o *UpdateCustomerSourcedEntityLookupTableRequestBodyFields) GetSourceCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceCategory, true
}

// SetSourceCategory sets field value
func (o *UpdateCustomerSourcedEntityLookupTableRequestBodyFields) SetSourceCategory(v string) {
	o.SourceCategory = v
}

func (o UpdateCustomerSourcedEntityLookupTableRequestBodyFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCustomerSourcedEntityLookupTableRequestBodyFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sourceCategory"] = o.SourceCategory
	return toSerialize, nil
}

func (o *UpdateCustomerSourcedEntityLookupTableRequestBodyFields) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sourceCategory",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateCustomerSourcedEntityLookupTableRequestBodyFields := _UpdateCustomerSourcedEntityLookupTableRequestBodyFields{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateCustomerSourcedEntityLookupTableRequestBodyFields)

	if err != nil {
		return err
	}

	*o = UpdateCustomerSourcedEntityLookupTableRequestBodyFields(varUpdateCustomerSourcedEntityLookupTableRequestBodyFields)

	return err
}

type NullableUpdateCustomerSourcedEntityLookupTableRequestBodyFields struct {
	value *UpdateCustomerSourcedEntityLookupTableRequestBodyFields
	isSet bool
}

func (v NullableUpdateCustomerSourcedEntityLookupTableRequestBodyFields) Get() *UpdateCustomerSourcedEntityLookupTableRequestBodyFields {
	return v.value
}

func (v *NullableUpdateCustomerSourcedEntityLookupTableRequestBodyFields) Set(val *UpdateCustomerSourcedEntityLookupTableRequestBodyFields) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCustomerSourcedEntityLookupTableRequestBodyFields) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCustomerSourcedEntityLookupTableRequestBodyFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCustomerSourcedEntityLookupTableRequestBodyFields(val *UpdateCustomerSourcedEntityLookupTableRequestBodyFields) *NullableUpdateCustomerSourcedEntityLookupTableRequestBodyFields {
	return &NullableUpdateCustomerSourcedEntityLookupTableRequestBodyFields{value: val, isSet: true}
}

func (v NullableUpdateCustomerSourcedEntityLookupTableRequestBodyFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCustomerSourcedEntityLookupTableRequestBodyFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



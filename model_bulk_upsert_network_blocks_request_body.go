/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologiccsiem

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BulkUpsertNetworkBlocksRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkUpsertNetworkBlocksRequestBody{}

// BulkUpsertNetworkBlocksRequestBody struct for BulkUpsertNetworkBlocksRequestBody
type BulkUpsertNetworkBlocksRequestBody struct {
	NetworkBlocks []CreateNetworkBlockRequestBodyFields `json:"networkBlocks"`
}

type _BulkUpsertNetworkBlocksRequestBody BulkUpsertNetworkBlocksRequestBody

// NewBulkUpsertNetworkBlocksRequestBody instantiates a new BulkUpsertNetworkBlocksRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkUpsertNetworkBlocksRequestBody(networkBlocks []CreateNetworkBlockRequestBodyFields) *BulkUpsertNetworkBlocksRequestBody {
	this := BulkUpsertNetworkBlocksRequestBody{}
	this.NetworkBlocks = networkBlocks
	return &this
}

// NewBulkUpsertNetworkBlocksRequestBodyWithDefaults instantiates a new BulkUpsertNetworkBlocksRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkUpsertNetworkBlocksRequestBodyWithDefaults() *BulkUpsertNetworkBlocksRequestBody {
	this := BulkUpsertNetworkBlocksRequestBody{}
	return &this
}

// GetNetworkBlocks returns the NetworkBlocks field value
func (o *BulkUpsertNetworkBlocksRequestBody) GetNetworkBlocks() []CreateNetworkBlockRequestBodyFields {
	if o == nil {
		var ret []CreateNetworkBlockRequestBodyFields
		return ret
	}

	return o.NetworkBlocks
}

// GetNetworkBlocksOk returns a tuple with the NetworkBlocks field value
// and a boolean to check if the value has been set.
func (o *BulkUpsertNetworkBlocksRequestBody) GetNetworkBlocksOk() ([]CreateNetworkBlockRequestBodyFields, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetworkBlocks, true
}

// SetNetworkBlocks sets field value
func (o *BulkUpsertNetworkBlocksRequestBody) SetNetworkBlocks(v []CreateNetworkBlockRequestBodyFields) {
	o.NetworkBlocks = v
}

func (o BulkUpsertNetworkBlocksRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkUpsertNetworkBlocksRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["networkBlocks"] = o.NetworkBlocks
	return toSerialize, nil
}

func (o *BulkUpsertNetworkBlocksRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"networkBlocks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkUpsertNetworkBlocksRequestBody := _BulkUpsertNetworkBlocksRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBulkUpsertNetworkBlocksRequestBody)

	if err != nil {
		return err
	}

	*o = BulkUpsertNetworkBlocksRequestBody(varBulkUpsertNetworkBlocksRequestBody)

	return err
}

type NullableBulkUpsertNetworkBlocksRequestBody struct {
	value *BulkUpsertNetworkBlocksRequestBody
	isSet bool
}

func (v NullableBulkUpsertNetworkBlocksRequestBody) Get() *BulkUpsertNetworkBlocksRequestBody {
	return v.value
}

func (v *NullableBulkUpsertNetworkBlocksRequestBody) Set(val *BulkUpsertNetworkBlocksRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkUpsertNetworkBlocksRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkUpsertNetworkBlocksRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkUpsertNetworkBlocksRequestBody(val *BulkUpsertNetworkBlocksRequestBody) *NullableBulkUpsertNetworkBlocksRequestBody {
	return &NullableBulkUpsertNetworkBlocksRequestBody{value: val, isSet: true}
}

func (v NullableBulkUpsertNetworkBlocksRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkUpsertNetworkBlocksRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner{}

// GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner struct for GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner
type GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner struct {
	Type string `json:"type"`
	From *string `json:"from,omitempty"`
	FromEnd *string `json:"fromEnd,omitempty"`
	To int32 `json:"to"`
}

type _GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner

// NewGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner instantiates a new GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner(type_ string, to int32) *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner {
	this := GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner{}
	this.Type = type_
	this.To = to
	return &this
}

// NewGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInnerWithDefaults instantiates a new GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInnerWithDefaults() *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner {
	this := GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner{}
	return &this
}

// GetType returns the Type field value
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) SetType(v string) {
	o.Type = v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) SetFrom(v string) {
	o.From = &v
}

// GetFromEnd returns the FromEnd field value if set, zero value otherwise.
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) GetFromEnd() string {
	if o == nil || IsNil(o.FromEnd) {
		var ret string
		return ret
	}
	return *o.FromEnd
}

// GetFromEndOk returns a tuple with the FromEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) GetFromEndOk() (*string, bool) {
	if o == nil || IsNil(o.FromEnd) {
		return nil, false
	}
	return o.FromEnd, true
}

// HasFromEnd returns a boolean if a field has been set.
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) HasFromEnd() bool {
	if o != nil && !IsNil(o.FromEnd) {
		return true
	}

	return false
}

// SetFromEnd gets a reference to the given string and assigns it to the FromEnd field.
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) SetFromEnd(v string) {
	o.FromEnd = &v
}

// GetTo returns the To field value
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) GetTo() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) GetToOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) SetTo(v int32) {
	o.To = v
}

func (o GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.FromEnd) {
		toSerialize["fromEnd"] = o.FromEnd
	}
	toSerialize["to"] = o.To
	return toSerialize, nil
}

func (o *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"to",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner := _GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner)

	if err != nil {
		return err
	}

	*o = GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner(varGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner)

	return err
}

type NullableGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner struct {
	value *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner
	isSet bool
}

func (v NullableGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) Get() *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner {
	return v.value
}

func (v *NullableGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) Set(val *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner(val *GetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) *NullableGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner {
	return &NullableGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner{value: val, isSet: true}
}

func (v NullableGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRulesResponseDataObjectsInnerOneOf2ScoreMappingMappingInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



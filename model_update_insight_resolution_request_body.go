/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologiccsiem

import (
	"encoding/json"
)

// checks if the UpdateInsightResolutionRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInsightResolutionRequestBody{}

// UpdateInsightResolutionRequestBody struct for UpdateInsightResolutionRequestBody
type UpdateInsightResolutionRequestBody struct {
	Fields *UpdateInsightResolutionRequestBodyFields `json:"fields,omitempty"`
}

// NewUpdateInsightResolutionRequestBody instantiates a new UpdateInsightResolutionRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInsightResolutionRequestBody() *UpdateInsightResolutionRequestBody {
	this := UpdateInsightResolutionRequestBody{}
	return &this
}

// NewUpdateInsightResolutionRequestBodyWithDefaults instantiates a new UpdateInsightResolutionRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInsightResolutionRequestBodyWithDefaults() *UpdateInsightResolutionRequestBody {
	this := UpdateInsightResolutionRequestBody{}
	return &this
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *UpdateInsightResolutionRequestBody) GetFields() UpdateInsightResolutionRequestBodyFields {
	if o == nil || IsNil(o.Fields) {
		var ret UpdateInsightResolutionRequestBodyFields
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInsightResolutionRequestBody) GetFieldsOk() (*UpdateInsightResolutionRequestBodyFields, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *UpdateInsightResolutionRequestBody) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given UpdateInsightResolutionRequestBodyFields and assigns it to the Fields field.
func (o *UpdateInsightResolutionRequestBody) SetFields(v UpdateInsightResolutionRequestBodyFields) {
	o.Fields = &v
}

func (o UpdateInsightResolutionRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInsightResolutionRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	return toSerialize, nil
}

type NullableUpdateInsightResolutionRequestBody struct {
	value *UpdateInsightResolutionRequestBody
	isSet bool
}

func (v NullableUpdateInsightResolutionRequestBody) Get() *UpdateInsightResolutionRequestBody {
	return v.value
}

func (v *NullableUpdateInsightResolutionRequestBody) Set(val *UpdateInsightResolutionRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInsightResolutionRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInsightResolutionRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInsightResolutionRequestBody(val *UpdateInsightResolutionRequestBody) *NullableUpdateInsightResolutionRequestBody {
	return &NullableUpdateInsightResolutionRequestBody{value: val, isSet: true}
}

func (v NullableUpdateInsightResolutionRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInsightResolutionRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



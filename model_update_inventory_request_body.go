/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateInventoryRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInventoryRequestBody{}

// UpdateInventoryRequestBody struct for UpdateInventoryRequestBody
type UpdateInventoryRequestBody struct {
	Fields CreateInventoryRequestBodyFields `json:"fields"`
}

type _UpdateInventoryRequestBody UpdateInventoryRequestBody

// NewUpdateInventoryRequestBody instantiates a new UpdateInventoryRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInventoryRequestBody(fields CreateInventoryRequestBodyFields) *UpdateInventoryRequestBody {
	this := UpdateInventoryRequestBody{}
	this.Fields = fields
	return &this
}

// NewUpdateInventoryRequestBodyWithDefaults instantiates a new UpdateInventoryRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInventoryRequestBodyWithDefaults() *UpdateInventoryRequestBody {
	this := UpdateInventoryRequestBody{}
	return &this
}

// GetFields returns the Fields field value
func (o *UpdateInventoryRequestBody) GetFields() CreateInventoryRequestBodyFields {
	if o == nil {
		var ret CreateInventoryRequestBodyFields
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *UpdateInventoryRequestBody) GetFieldsOk() (*CreateInventoryRequestBodyFields, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fields, true
}

// SetFields sets field value
func (o *UpdateInventoryRequestBody) SetFields(v CreateInventoryRequestBodyFields) {
	o.Fields = v
}

func (o UpdateInventoryRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInventoryRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fields"] = o.Fields
	return toSerialize, nil
}

func (o *UpdateInventoryRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateInventoryRequestBody := _UpdateInventoryRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateInventoryRequestBody)

	if err != nil {
		return err
	}

	*o = UpdateInventoryRequestBody(varUpdateInventoryRequestBody)

	return err
}

type NullableUpdateInventoryRequestBody struct {
	value *UpdateInventoryRequestBody
	isSet bool
}

func (v NullableUpdateInventoryRequestBody) Get() *UpdateInventoryRequestBody {
	return v.value
}

func (v *NullableUpdateInventoryRequestBody) Set(val *UpdateInventoryRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInventoryRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInventoryRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInventoryRequestBody(val *UpdateInventoryRequestBody) *NullableUpdateInventoryRequestBody {
	return &NullableUpdateInventoryRequestBody{value: val, isSet: true}
}

func (v NullableUpdateInventoryRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInventoryRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



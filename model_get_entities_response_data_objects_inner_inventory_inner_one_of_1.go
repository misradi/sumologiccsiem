/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1{}

// GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 struct for GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1
type GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 struct {
	UniqueId string `json:"uniqueId"`
	Source string `json:"source"`
	Timestamp string `json:"timestamp"`
	ParsedTime string `json:"parsedTime"`
	Groups []string `json:"groups"`
	Metadata map[string]interface{} `json:"metadata"`
	Username string `json:"username"`
	NormalizedUsername *string `json:"normalizedUsername,omitempty"`
	GivenName *string `json:"givenName,omitempty"`
	MiddleName *string `json:"middleName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	Department *string `json:"department,omitempty"`
	Emails []string `json:"emails"`
}

type _GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1

// NewGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 instantiates a new GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1(uniqueId string, source string, timestamp string, parsedTime string, groups []string, metadata map[string]interface{}, username string, emails []string) *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 {
	this := GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1{}
	this.UniqueId = uniqueId
	this.Source = source
	this.Timestamp = timestamp
	this.ParsedTime = parsedTime
	this.Groups = groups
	this.Metadata = metadata
	this.Username = username
	this.Emails = emails
	return &this
}

// NewGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1WithDefaults instantiates a new GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1WithDefaults() *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 {
	this := GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1{}
	return &this
}

// GetUniqueId returns the UniqueId field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetUniqueId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UniqueId
}

// GetUniqueIdOk returns a tuple with the UniqueId field value
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetUniqueIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UniqueId, true
}

// SetUniqueId sets field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetUniqueId(v string) {
	o.UniqueId = v
}

// GetSource returns the Source field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetSource(v string) {
	o.Source = v
}

// GetTimestamp returns the Timestamp field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetTimestamp(v string) {
	o.Timestamp = v
}

// GetParsedTime returns the ParsedTime field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetParsedTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParsedTime
}

// GetParsedTimeOk returns a tuple with the ParsedTime field value
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetParsedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParsedTime, true
}

// SetParsedTime sets field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetParsedTime(v string) {
	o.ParsedTime = v
}

// GetGroups returns the Groups field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetGroups() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetGroupsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetGroups(v []string) {
	o.Groups = v
}

// GetMetadata returns the Metadata field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// SetMetadata sets field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetUsername returns the Username field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetUsername(v string) {
	o.Username = v
}

// GetNormalizedUsername returns the NormalizedUsername field value if set, zero value otherwise.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetNormalizedUsername() string {
	if o == nil || IsNil(o.NormalizedUsername) {
		var ret string
		return ret
	}
	return *o.NormalizedUsername
}

// GetNormalizedUsernameOk returns a tuple with the NormalizedUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetNormalizedUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.NormalizedUsername) {
		return nil, false
	}
	return o.NormalizedUsername, true
}

// HasNormalizedUsername returns a boolean if a field has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) HasNormalizedUsername() bool {
	if o != nil && !IsNil(o.NormalizedUsername) {
		return true
	}

	return false
}

// SetNormalizedUsername gets a reference to the given string and assigns it to the NormalizedUsername field.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetNormalizedUsername(v string) {
	o.NormalizedUsername = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetGivenName() string {
	if o == nil || IsNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetGivenNameOk() (*string, bool) {
	if o == nil || IsNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) HasGivenName() bool {
	if o != nil && !IsNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetGivenName(v string) {
	o.GivenName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) HasMiddleName() bool {
	if o != nil && !IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetLastName(v string) {
	o.LastName = &v
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetDepartment() string {
	if o == nil || IsNil(o.Department) {
		var ret string
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetDepartmentOk() (*string, bool) {
	if o == nil || IsNil(o.Department) {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) HasDepartment() bool {
	if o != nil && !IsNil(o.Department) {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given string and assigns it to the Department field.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetDepartment(v string) {
	o.Department = &v
}

// GetEmails returns the Emails field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetEmails() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value
// and a boolean to check if the value has been set.
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) GetEmailsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Emails, true
}

// SetEmails sets field value
func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) SetEmails(v []string) {
	o.Emails = v
}

func (o GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["uniqueId"] = o.UniqueId
	toSerialize["source"] = o.Source
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["parsedTime"] = o.ParsedTime
	toSerialize["groups"] = o.Groups
	toSerialize["metadata"] = o.Metadata
	toSerialize["username"] = o.Username
	if !IsNil(o.NormalizedUsername) {
		toSerialize["normalizedUsername"] = o.NormalizedUsername
	}
	if !IsNil(o.GivenName) {
		toSerialize["givenName"] = o.GivenName
	}
	if !IsNil(o.MiddleName) {
		toSerialize["middleName"] = o.MiddleName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.Department) {
		toSerialize["department"] = o.Department
	}
	toSerialize["emails"] = o.Emails
	return toSerialize, nil
}

func (o *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"uniqueId",
		"source",
		"timestamp",
		"parsedTime",
		"groups",
		"metadata",
		"username",
		"emails",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 := _GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1)

	if err != nil {
		return err
	}

	*o = GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1(varGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1)

	return err
}

type NullableGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 struct {
	value *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1
	isSet bool
}

func (v NullableGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) Get() *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 {
	return v.value
}

func (v *NullableGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) Set(val *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1(val *GetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) *NullableGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1 {
	return &NullableGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1{value: val, isSet: true}
}

func (v NullableGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEntitiesResponseDataObjectsInnerInventoryInnerOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



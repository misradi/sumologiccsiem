/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateContextActionRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateContextActionRequestBody{}

// CreateContextActionRequestBody struct for CreateContextActionRequestBody
type CreateContextActionRequestBody struct {
	Name string `json:"name"`
	Type *string `json:"type,omitempty"`
	Template *string `json:"template,omitempty"`
	IocTypes []string `json:"iocTypes"`
	EntityTypes []string `json:"entityTypes,omitempty"`
	RecordFields []string `json:"recordFields,omitempty"`
	AllRecordFields *bool `json:"allRecordFields,omitempty"`
}

type _CreateContextActionRequestBody CreateContextActionRequestBody

// NewCreateContextActionRequestBody instantiates a new CreateContextActionRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateContextActionRequestBody(name string, iocTypes []string) *CreateContextActionRequestBody {
	this := CreateContextActionRequestBody{}
	this.Name = name
	var type_ string = "URL"
	this.Type = &type_
	this.IocTypes = iocTypes
	return &this
}

// NewCreateContextActionRequestBodyWithDefaults instantiates a new CreateContextActionRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateContextActionRequestBodyWithDefaults() *CreateContextActionRequestBody {
	this := CreateContextActionRequestBody{}
	var type_ string = "URL"
	this.Type = &type_
	return &this
}

// GetName returns the Name field value
func (o *CreateContextActionRequestBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateContextActionRequestBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateContextActionRequestBody) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateContextActionRequestBody) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContextActionRequestBody) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateContextActionRequestBody) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CreateContextActionRequestBody) SetType(v string) {
	o.Type = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *CreateContextActionRequestBody) GetTemplate() string {
	if o == nil || IsNil(o.Template) {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContextActionRequestBody) GetTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *CreateContextActionRequestBody) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *CreateContextActionRequestBody) SetTemplate(v string) {
	o.Template = &v
}

// GetIocTypes returns the IocTypes field value
func (o *CreateContextActionRequestBody) GetIocTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.IocTypes
}

// GetIocTypesOk returns a tuple with the IocTypes field value
// and a boolean to check if the value has been set.
func (o *CreateContextActionRequestBody) GetIocTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IocTypes, true
}

// SetIocTypes sets field value
func (o *CreateContextActionRequestBody) SetIocTypes(v []string) {
	o.IocTypes = v
}

// GetEntityTypes returns the EntityTypes field value if set, zero value otherwise.
func (o *CreateContextActionRequestBody) GetEntityTypes() []string {
	if o == nil || IsNil(o.EntityTypes) {
		var ret []string
		return ret
	}
	return o.EntityTypes
}

// GetEntityTypesOk returns a tuple with the EntityTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContextActionRequestBody) GetEntityTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.EntityTypes) {
		return nil, false
	}
	return o.EntityTypes, true
}

// HasEntityTypes returns a boolean if a field has been set.
func (o *CreateContextActionRequestBody) HasEntityTypes() bool {
	if o != nil && !IsNil(o.EntityTypes) {
		return true
	}

	return false
}

// SetEntityTypes gets a reference to the given []string and assigns it to the EntityTypes field.
func (o *CreateContextActionRequestBody) SetEntityTypes(v []string) {
	o.EntityTypes = v
}

// GetRecordFields returns the RecordFields field value if set, zero value otherwise.
func (o *CreateContextActionRequestBody) GetRecordFields() []string {
	if o == nil || IsNil(o.RecordFields) {
		var ret []string
		return ret
	}
	return o.RecordFields
}

// GetRecordFieldsOk returns a tuple with the RecordFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContextActionRequestBody) GetRecordFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.RecordFields) {
		return nil, false
	}
	return o.RecordFields, true
}

// HasRecordFields returns a boolean if a field has been set.
func (o *CreateContextActionRequestBody) HasRecordFields() bool {
	if o != nil && !IsNil(o.RecordFields) {
		return true
	}

	return false
}

// SetRecordFields gets a reference to the given []string and assigns it to the RecordFields field.
func (o *CreateContextActionRequestBody) SetRecordFields(v []string) {
	o.RecordFields = v
}

// GetAllRecordFields returns the AllRecordFields field value if set, zero value otherwise.
func (o *CreateContextActionRequestBody) GetAllRecordFields() bool {
	if o == nil || IsNil(o.AllRecordFields) {
		var ret bool
		return ret
	}
	return *o.AllRecordFields
}

// GetAllRecordFieldsOk returns a tuple with the AllRecordFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContextActionRequestBody) GetAllRecordFieldsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllRecordFields) {
		return nil, false
	}
	return o.AllRecordFields, true
}

// HasAllRecordFields returns a boolean if a field has been set.
func (o *CreateContextActionRequestBody) HasAllRecordFields() bool {
	if o != nil && !IsNil(o.AllRecordFields) {
		return true
	}

	return false
}

// SetAllRecordFields gets a reference to the given bool and assigns it to the AllRecordFields field.
func (o *CreateContextActionRequestBody) SetAllRecordFields(v bool) {
	o.AllRecordFields = &v
}

func (o CreateContextActionRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateContextActionRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	toSerialize["iocTypes"] = o.IocTypes
	if !IsNil(o.EntityTypes) {
		toSerialize["entityTypes"] = o.EntityTypes
	}
	if !IsNil(o.RecordFields) {
		toSerialize["recordFields"] = o.RecordFields
	}
	if !IsNil(o.AllRecordFields) {
		toSerialize["allRecordFields"] = o.AllRecordFields
	}
	return toSerialize, nil
}

func (o *CreateContextActionRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"iocTypes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateContextActionRequestBody := _CreateContextActionRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateContextActionRequestBody)

	if err != nil {
		return err
	}

	*o = CreateContextActionRequestBody(varCreateContextActionRequestBody)

	return err
}

type NullableCreateContextActionRequestBody struct {
	value *CreateContextActionRequestBody
	isSet bool
}

func (v NullableCreateContextActionRequestBody) Get() *CreateContextActionRequestBody {
	return v.value
}

func (v *NullableCreateContextActionRequestBody) Set(val *CreateContextActionRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateContextActionRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateContextActionRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateContextActionRequestBody(val *CreateContextActionRequestBody) *NullableCreateContextActionRequestBody {
	return &NullableCreateContextActionRequestBody{value: val, isSet: true}
}

func (v NullableCreateContextActionRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateContextActionRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



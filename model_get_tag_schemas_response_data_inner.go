/*
Sumo Logic CSE API

 https://help.sumologic.com/APIs 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sumologiccsiem

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetTagSchemasResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTagSchemasResponseDataInner{}

// GetTagSchemasResponseDataInner struct for GetTagSchemasResponseDataInner
type GetTagSchemasResponseDataInner struct {
	Key string `json:"key"`
	Label *string `json:"label,omitempty"`
	ContentTypeEnums []string `json:"contentTypeEnums,omitempty"`
	Freeform *bool `json:"freeform,omitempty"`
	ValueOptions *string `json:"valueOptions,omitempty"`
	ValueOptionObjects []GetTagSchemasResponseDataInnerValueOptionObjectsInner `json:"valueOptionObjects,omitempty"`
}

type _GetTagSchemasResponseDataInner GetTagSchemasResponseDataInner

// NewGetTagSchemasResponseDataInner instantiates a new GetTagSchemasResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTagSchemasResponseDataInner(key string) *GetTagSchemasResponseDataInner {
	this := GetTagSchemasResponseDataInner{}
	this.Key = key
	return &this
}

// NewGetTagSchemasResponseDataInnerWithDefaults instantiates a new GetTagSchemasResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTagSchemasResponseDataInnerWithDefaults() *GetTagSchemasResponseDataInner {
	this := GetTagSchemasResponseDataInner{}
	return &this
}

// GetKey returns the Key field value
func (o *GetTagSchemasResponseDataInner) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *GetTagSchemasResponseDataInner) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *GetTagSchemasResponseDataInner) SetKey(v string) {
	o.Key = v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *GetTagSchemasResponseDataInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTagSchemasResponseDataInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *GetTagSchemasResponseDataInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *GetTagSchemasResponseDataInner) SetLabel(v string) {
	o.Label = &v
}

// GetContentTypeEnums returns the ContentTypeEnums field value if set, zero value otherwise.
func (o *GetTagSchemasResponseDataInner) GetContentTypeEnums() []string {
	if o == nil || IsNil(o.ContentTypeEnums) {
		var ret []string
		return ret
	}
	return o.ContentTypeEnums
}

// GetContentTypeEnumsOk returns a tuple with the ContentTypeEnums field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTagSchemasResponseDataInner) GetContentTypeEnumsOk() ([]string, bool) {
	if o == nil || IsNil(o.ContentTypeEnums) {
		return nil, false
	}
	return o.ContentTypeEnums, true
}

// HasContentTypeEnums returns a boolean if a field has been set.
func (o *GetTagSchemasResponseDataInner) HasContentTypeEnums() bool {
	if o != nil && !IsNil(o.ContentTypeEnums) {
		return true
	}

	return false
}

// SetContentTypeEnums gets a reference to the given []string and assigns it to the ContentTypeEnums field.
func (o *GetTagSchemasResponseDataInner) SetContentTypeEnums(v []string) {
	o.ContentTypeEnums = v
}

// GetFreeform returns the Freeform field value if set, zero value otherwise.
func (o *GetTagSchemasResponseDataInner) GetFreeform() bool {
	if o == nil || IsNil(o.Freeform) {
		var ret bool
		return ret
	}
	return *o.Freeform
}

// GetFreeformOk returns a tuple with the Freeform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTagSchemasResponseDataInner) GetFreeformOk() (*bool, bool) {
	if o == nil || IsNil(o.Freeform) {
		return nil, false
	}
	return o.Freeform, true
}

// HasFreeform returns a boolean if a field has been set.
func (o *GetTagSchemasResponseDataInner) HasFreeform() bool {
	if o != nil && !IsNil(o.Freeform) {
		return true
	}

	return false
}

// SetFreeform gets a reference to the given bool and assigns it to the Freeform field.
func (o *GetTagSchemasResponseDataInner) SetFreeform(v bool) {
	o.Freeform = &v
}

// GetValueOptions returns the ValueOptions field value if set, zero value otherwise.
func (o *GetTagSchemasResponseDataInner) GetValueOptions() string {
	if o == nil || IsNil(o.ValueOptions) {
		var ret string
		return ret
	}
	return *o.ValueOptions
}

// GetValueOptionsOk returns a tuple with the ValueOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTagSchemasResponseDataInner) GetValueOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.ValueOptions) {
		return nil, false
	}
	return o.ValueOptions, true
}

// HasValueOptions returns a boolean if a field has been set.
func (o *GetTagSchemasResponseDataInner) HasValueOptions() bool {
	if o != nil && !IsNil(o.ValueOptions) {
		return true
	}

	return false
}

// SetValueOptions gets a reference to the given string and assigns it to the ValueOptions field.
func (o *GetTagSchemasResponseDataInner) SetValueOptions(v string) {
	o.ValueOptions = &v
}

// GetValueOptionObjects returns the ValueOptionObjects field value if set, zero value otherwise.
func (o *GetTagSchemasResponseDataInner) GetValueOptionObjects() []GetTagSchemasResponseDataInnerValueOptionObjectsInner {
	if o == nil || IsNil(o.ValueOptionObjects) {
		var ret []GetTagSchemasResponseDataInnerValueOptionObjectsInner
		return ret
	}
	return o.ValueOptionObjects
}

// GetValueOptionObjectsOk returns a tuple with the ValueOptionObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTagSchemasResponseDataInner) GetValueOptionObjectsOk() ([]GetTagSchemasResponseDataInnerValueOptionObjectsInner, bool) {
	if o == nil || IsNil(o.ValueOptionObjects) {
		return nil, false
	}
	return o.ValueOptionObjects, true
}

// HasValueOptionObjects returns a boolean if a field has been set.
func (o *GetTagSchemasResponseDataInner) HasValueOptionObjects() bool {
	if o != nil && !IsNil(o.ValueOptionObjects) {
		return true
	}

	return false
}

// SetValueOptionObjects gets a reference to the given []GetTagSchemasResponseDataInnerValueOptionObjectsInner and assigns it to the ValueOptionObjects field.
func (o *GetTagSchemasResponseDataInner) SetValueOptionObjects(v []GetTagSchemasResponseDataInnerValueOptionObjectsInner) {
	o.ValueOptionObjects = v
}

func (o GetTagSchemasResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTagSchemasResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.ContentTypeEnums) {
		toSerialize["contentTypeEnums"] = o.ContentTypeEnums
	}
	if !IsNil(o.Freeform) {
		toSerialize["freeform"] = o.Freeform
	}
	if !IsNil(o.ValueOptions) {
		toSerialize["valueOptions"] = o.ValueOptions
	}
	if !IsNil(o.ValueOptionObjects) {
		toSerialize["valueOptionObjects"] = o.ValueOptionObjects
	}
	return toSerialize, nil
}

func (o *GetTagSchemasResponseDataInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetTagSchemasResponseDataInner := _GetTagSchemasResponseDataInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetTagSchemasResponseDataInner)

	if err != nil {
		return err
	}

	*o = GetTagSchemasResponseDataInner(varGetTagSchemasResponseDataInner)

	return err
}

type NullableGetTagSchemasResponseDataInner struct {
	value *GetTagSchemasResponseDataInner
	isSet bool
}

func (v NullableGetTagSchemasResponseDataInner) Get() *GetTagSchemasResponseDataInner {
	return v.value
}

func (v *NullableGetTagSchemasResponseDataInner) Set(val *GetTagSchemasResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTagSchemasResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTagSchemasResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTagSchemasResponseDataInner(val *GetTagSchemasResponseDataInner) *NullableGetTagSchemasResponseDataInner {
	return &NullableGetTagSchemasResponseDataInner{value: val, isSet: true}
}

func (v NullableGetTagSchemasResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTagSchemasResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


